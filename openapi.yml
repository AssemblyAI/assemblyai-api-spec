openapi: 3.1.0

info:
  title: AssemblyAI API
  description: AssemblyAI API
  version: 1.0.0
  contact:
    name: API Support
    email: support@assemblyai.com
    url: https://www.assemblyai.com/docs/

servers:
  - url: https://api.assemblyai.com
    description: AssemblyAI API

tags:
  - name: transcript
    description: Transcript related operations
    externalDocs:
      url: https://www.assemblyai.com/docs/guides/transcribing-an-audio-file
  - name: LeMUR
    description: LeMUR related operations
    externalDocs:
      url: https://www.assemblyai.com/docs/guides/processing-audio-with-llms-using-lemur
  - name: realtime
    description: Real-time transcription
    externalDocs:
      url: https://www.assemblyai.com/docs/guides/real-time-streaming-transcription

security:
  - ApiKey: []

paths:
  /v2/upload:
    post:
      tags:
        - transcript
      summary: Upload a media file which can be transcribed
      operationId: uploadFile
      x-fern-sdk-group-name: files
      x-fern-sdk-method-name: upload
      description: Upload your media file directly to the AssemblyAI API if it isn't accessible via a URL already.
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        "200":
          description: File uploaded successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UploadedFile"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"

  /v2/transcript:
    post:
      tags:
        - transcript
      summary: Create a transcript from an audio file
      operationId: createTranscript
      x-fern-sdk-group-name: transcripts
      x-fern-sdk-method-name: submit
      x-fern-request-name: TranscriptParams
      description: Create a transcript from an audio or video file that is accessible via a URL.
      requestBody:
        description: Params to create a transcript
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TranscriptParams"
      responses:
        "201":
          description: Transcript created and queued for processing
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transcript"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"

    get:
      tags:
        - transcript
      summary: List transcripts
      x-fern-sdk-group-name: transcripts
      x-fern-sdk-method-name: list
      x-fern-request-name: ListTranscriptParams
      operationId: listTranscripts
      description: Retrieve a list of transcripts you created
      parameters:
        - name: limit
          in: query
          description: Maximum amount of transcripts to retrieve
          schema:
            $ref: "#/components/schemas/ListTranscriptParams/properties/limit"
        - name: status
          in: query
          description: Filter by transcript status
          schema:
            # Use TranscriptStatus instead of
            # ListTranscriptParams/properties/limit for better SDK generation
            $ref: "#/components/schemas/TranscriptStatus"

        - name: created_on
          in: query
          description: Only get transcripts created on this date
          schema:
            $ref: "#/components/schemas/ListTranscriptParams/properties/created_on"

        - name: before_id
          in: query
          description: Get transcripts that were created before this transcript ID
          schema:
            $ref: "#/components/schemas/ListTranscriptParams/properties/before_id"

        - name: after_id
          in: query
          description: Get transcripts that were created after this transcript ID
          schema:
            $ref: "#/components/schemas/ListTranscriptParams/properties/after_id"

        - name: throttled_only
          in: query
          description: Only get throttled transcripts, overrides the status filter
          schema:
            $ref: "#/components/schemas/ListTranscriptParams/properties/throttled_only"

      responses:
        "200":
          description: A list of transcripts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TranscriptList"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"

  /v2/transcript/{transcript_id}:
    get:
      tags:
        - transcript
      summary: Get the transcript
      operationId: getTranscript
      x-fern-sdk-group-name: transcripts
      x-fern-sdk-method-name: get
      x-fern-request-name: GetTranscriptParams
      description: Get the transcript resource. The transcript is ready when the "status" is "completed".
      parameters:
        - name: transcript_id
          in: path
          description: ID of the transcript
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The transcript resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transcript"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"

    delete:
      tags:
        - transcript
      summary: Delete the transcript
      operationId: deleteTranscript
      x-fern-sdk-group-name: transcripts
      x-fern-sdk-method-name: delete
      description: Delete the transcript
      parameters:
        - name: transcript_id
          in: path
          description: ID of the transcript
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The deleted transcript response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transcript"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"

  /v2/transcript/{transcript_id}/{subtitle_format}:
    get:
      tags:
        - transcript
      summary: Export transcript as SRT or VTT captions
      operationId: getSubtitles
      x-fern-sdk-group-name: transcripts
      x-fern-sdk-method-name: getSubtitles
      x-fern-request-name: GetSubtitlesParams
      description: Export your transcript in SRT or VTT format, to be plugged into a video player for subtitles and closed captions.
      parameters:
        - name: transcript_id
          in: path
          description: ID of the transcript
          required: true
          schema:
            type: string
        - name: subtitle_format
          in: path
          description: The format of the captions
          required: true
          schema:
            $ref: "#/components/schemas/SubtitleFormat"
        - name: chars_per_caption
          in: query
          description: The maximum number of characters per caption
          schema:
            type: integer

      responses:
        "200":
          description: The exported captions as text
          content:
            text/plain:
              schema:
                type: string
                example: |
                  WEBVTT
                  00:12.340 --> 00:16.220
                  Last year I showed these two slides said that demonstrate
                  00:16.200 --> 00:20.040
                  that the Arctic ice cap which for most of the last 3,000,000 years has been the
                  00:20.020 --> 00:25.040
                  size of the lower 48 States has shrunk by 40% but this understates
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"

  /v2/transcript/{transcript_id}/sentences:
    get:
      tags:
        - transcript
      summary: Get the transcript split by sentences
      operationId: getTranscriptSentences
      x-fern-sdk-group-name: transcripts
      x-fern-sdk-method-name: getSentences
      x-fern-request-name: GetSentencesParams
      description: Get the transcript split by sentences. The API will attempt to semantically segment the transcript into sentences to create more reader-friendly transcripts.
      parameters:
        - name: transcript_id
          in: path
          description: ID of the transcript
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Exported sentences
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SentencesResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"

  /v2/transcript/{transcript_id}/paragraphs:
    get:
      tags:
        - transcript
      summary: Get the transcript split by paragraphs
      operationId: getTranscriptParagraphs
      x-fern-sdk-group-name: transcripts
      x-fern-sdk-method-name: getParagraphs
      x-fern-request-name: GetParagraphsParams
      description: Get the transcript split by paragraphs. The API will attempt to semantically segment your transcript into paragraphs to create more reader-friendly transcripts.
      parameters:
        - name: transcript_id
          in: path
          description: ID of the transcript
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Exported paragraphs
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParagraphsResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"

  /v2/transcript/{transcript_id}/word-search:
    get:
      tags:
        - transcript
      summary: Search the given transcript for words, numbers, or phrases
      operationId: wordSearch
      x-fern-sdk-group-name: transcripts
      x-fern-sdk-method-name: wordSearch
      x-fern-request-name: WordSearchParams
      description: Search through the transcript for a specific set of keywords. You can search for individual words, numbers, or phrases containing up to five words or numbers.
      parameters:
        - name: transcript_id
          in: path
          description: ID of the transcript
          required: true
          schema:
            type: string
        - name: words
          in: query
          description: Keywords to search for
          required: true
          schema:
            type: array
            items:
              type: string

      responses:
        "200":
          description: Word search response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WordSearchResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"

  /v2/transcript/{transcript_id}/redacted-audio:
    get:
      tags:
        - transcript
      summary: Retrieve the redacted audio object containing the status and URL to the redacted audio.
      description: Retrieve the redacted audio object containing the status and URL to the redacted audio.
      operationId: getRedactedAudio
      x-fern-sdk-group-name: transcripts
      x-fern-sdk-method-name: getRedactedAudio
      x-fern-request-name: GetRedactedAudioParams
      parameters:
        - name: transcript_id
          in: path
          description: ID of the transcript
          required: true
          schema:
            type: string

      responses:
        "200":
          description: The redacted audio object containing the status and URL to the redacted audio
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RedactedAudioResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"

  /v2/realtime/token:
    post:
      tags:
        - realtime
      summary: Create a temporary authentication token for real-time transcription
      description: Create a temporary authentication token for real-time transcription
      operationId: createTemporaryToken
      x-fern-sdk-group-name: realtime
      x-fern-sdk-method-name: createTemporaryToken
      x-fern-request-name: CreateRealtimeTemporaryTokenParams
      requestBody:
        description: Params to create a temporary authentication token
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRealtimeTemporaryTokenParams"
      responses:
        "200":
          description: Temporary authentication token generated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RealtimeTemporaryTokenResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"

  /lemur/v3/generate/task:
    post:
      tags:
        - LeMUR
      summary: Run a LLM task with your own prompt
      operationId: lemurTask
      x-fern-sdk-group-name: lemur
      x-fern-sdk-method-name: task
      x-fern-request-name: LemurTaskParams
      description: Use the LeMUR task endpoint to input your own LLM prompt.
      requestBody:
        description: Params to run the task
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LemurTaskParams"
      responses:
        "200":
          description: LeMUR task response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LemurTaskResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"

  /lemur/v3/generate/summary:
    post:
      tags:
        - LeMUR
      summary: Generate a custom summary from one or more transcripts
      operationId: lemurSummary
      x-fern-sdk-group-name: lemur
      x-fern-sdk-method-name: summary
      x-fern-request-name: LemurSummaryParams
      description: Custom Summary allows you to distill a piece of audio into a few impactful sentences. You can give the model context to obtain more targeted results while outputting the results in a variety of formats described in human language.
      requestBody:
        description: Params to generate the summary
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LemurSummaryParams"

      responses:
        "200":
          description: LeMUR summary response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LemurSummaryResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"

  /lemur/v3/generate/question-answer:
    post:
      tags:
        - LeMUR
      summary: Create answers to one or more questions about one or more transcripts
      operationId: lemurQuestionAnswer
      x-fern-sdk-group-name: lemur
      x-fern-sdk-method-name: questionAnswer
      x-fern-request-name: LemurQuestionAnswerParams
      description: Question & Answer allows you to ask free-form questions about a single transcript or a group of transcripts. The questions can be any whose answers you find useful, such as judging whether a caller is likely to become a customer or whether all items on a meeting's agenda were covered.
      requestBody:
        description: Params to ask questions about the transcripts
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LemurQuestionAnswerParams"

      responses:
        "200":
          description: LeMUR question & answer response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LemurQuestionAnswerResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"

  /lemur/v3/generate/action-items:
    post:
      tags:
        - LeMUR
      summary: Extract action items from one or more meeting transcripts
      operationId: lemurActionItems
      x-fern-sdk-group-name: lemur
      x-fern-sdk-method-name: actionItems
      x-fern-request-name: LemurActionItemsParams
      x-fern-examples: 
        - codeSamples: 
            - sdk: typescript
              code: | 
                import { AssemblyAI } from assemblyai; 

                const client = new AssemblyAI({
                  apiKey: process.env.ASSEMBLYAI_API_KEY,
                });
                
                await client.lemur.actionItems({
                  "transcript_ids": [
                    "64nygnr62k-405c-4ae8-8a6b-d90b40ff3cce"
                  ],
                  "context": "This is an interview about wildfires.",
                  "final_model": "default",
                  "max_output_size": 3000,
                  "temperature": 0,
                  "answer_format": "Bullet Points"
                });
      description: Use LeMUR to generate a list of action items from a transcript
      requestBody:
        description: Params to generate action items from transcripts
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LemurActionItemsParams"

      responses:
        "200":
          description: LeMUR action items response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LemurActionItemsResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"

  /lemur/v3/{request_id}:
    delete:
      tags:
        - LeMUR
      summary: Delete the data for a previously submitted LeMUR request
      operationId: purgeLemurRequestData
      x-fern-sdk-group-name: lemur
      x-fern-sdk-method-name: purgeRequestData
      x-fern-request-name: PurgeLemurRequestDataParams
      description: |
        Delete the data for a previously submitted LeMUR request.
        The LLM response data, as well as any context provided in the original request will be removed.
      parameters:
        - name: request_id
          in: path
          description: The ID of the LeMUR request whose data you want to delete. This would be found in the response of the original request.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: LeMUR request data deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PurgeLemurRequestDataResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"

components:
  schemas:
    RedactedAudioResponse:
      type: object
      additionalProperties: false
      x-fern-sdk-group-name: transcripts
      required:
        - status
        - redacted_audio_url
      properties:
        status:
          description: The status of the redacted audio
          $ref: "#/components/schemas/RedactedAudioStatus"
        redacted_audio_url:
          description: The URL of the redacted audio file
          type: string
      example:
        {
          redacted_audio_url: "https://s3.us-west-2.amazonaws.com/api.assembly.ai.usw2/redacted-audio/785efd9e-0e20-45e1-967b-3db17770ed9f.wav?AWSAccessKeyId=ASIAVASQFLPGLUP5JD7Y&Signature=z1r2MOA46esiiAmk%2FreBkL8rl6g%3D&x-amz-security-token=IQoJb3JpZ2luX2VjEPv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHxKoUJdd5P%2Fdy4WlfvRNppQtauTy7OuAb5azR2OIoYSAiEA8iPx4xAx0pbZztT4e7fGnzPS4phvNCnYKflIijUoxDsq%2BwMIMxAEGgwzNDQ4MzkyNDg4NDQiDJxsCgo0cDg789FV0CrYAwPK3CHbRHoNPFiQ%2FO6EdHZ4OSFRcS%2FDvDyHQRNnYNSwG4JB2mUMWEVw808JWTya%2But4wEcmPiUCVJMTvh70cxhILAxP84CBTuWGM%2Fszbj4tn1thjVsqovf9YZmP17OCFa77Bc9%2F9RwtRaABEqJ2eb6%2Bsir7w0MMzhe1z%2F%2B1PUKxicJAZasBv3Ova%2BTY2eNkPZHQ4Njie4X5sh05b%2BrKnz58E7GTQ1sHZQDYHZecwb5fP0B3LR0vuqNtK%2BdpMAxw5H7BinQ4rdccLmsLLMQeVn8jdRDZNEvsdmoeQL0y0qD%2BUcyGMJoAjMT4FnXhBhVxc3bgkVUbHlZMn48FNCYcmzM8UB9wGmSnr6iQoqEaFElfQVbvAzsW7lnlfLROZxMvGXyliobPYPSaYZlVYgHcIxeWuOAXRtEtmL2jbaX4ghCVgJBVO3BBzTgub2jB0KPU6lYZLLM4kf%2B8hKX8iyxSRc6ZVEefTcyruoDppjB028pA9q75hLH1CZwhfLoM%2F3z5f0aFCl05zQnaa10nbcKj0hERELf4FXqS8yWbSutlRcd7Rr9o8jN31QGUscpsuIvl%2FpyJcZmItX8nO%2FF0s1QjrIi11DLYD9YoOh7eVkN8eKKn5w4cHldVI2sw4NCPqgY6pQE%2BM9va2ad1%2BNrXeQ9t8K41lojTN0BFmM8ERD5fF77xcTlW8VdV%2FiJeLLHDvnYYWVKcga9hSROlmsqvMyn3Tmhz7KQbIepSAOKhcHM%2FyUaLfErvCtjXGwo8nsKForL7SKiGkaRCBmwfQtkSVP6m4tGT50YdGxakh54f8uyC55SbkElknRbpl5haiZ%2F82UddFBkdPcM3t0s7vwbEy%2BbilYyetOr6htc%3D&Expires=1698966551",
          status: "redacted_audio_ready",
        }

    RedactedAudioStatus:
      description: The status of the redacted audio
      x-fern-sdk-group-name: transcripts
      type: string
      enum:
        - redacted_audio_ready

    SubtitleFormat:
      description: Format of the subtitles
      x-fern-sdk-group-name: transcripts
      type: string
      enum:
        - srt
        - vtt

    WordSearchResponse:
      type: object
      x-fern-sdk-group-name: transcripts
      additionalProperties: false
      properties:
        id:
          description: The ID of the transcript
          type: string
          format: uuid
        total_count:
          description: The total count of all matched instances. For e.g., word 1 matched 2 times, and word 2 matched 3 times, `total_count` will equal 5.
          type: integer
        matches:
          description: The matches of the search
          type: array
          items:
            $ref: "#/components/schemas/WordSearchMatch"
      required:
        - id
        - total_count
        - matches
      example:
        {
          id: "d5a3d302-066e-43fb-b63b-8f57baf185db",
          total_count: 10,
          matches:
            [
              {
                text: "smoke",
                count: 6,
                timestamps:
                  [
                    [250, 650],
                    [49168, 49398],
                    [55284, 55594],
                    [168888, 169118],
                    [215108, 215386],
                    [225944, 226170],
                  ],
                indexes: [0, 136, 156, 486, 652, 698],
              },
              {
                text: "wildfires",
                count: 4,
                timestamps:
                  [[1668, 2346], [33852, 34546], [50118, 51110], [231356, 232354]],
                indexes: [4, 90, 140, 716],
              },
            ],
        }

    WordSearchMatch:
      type: object
      x-fern-sdk-group-name: transcripts
      additionalProperties: false
      properties:
        text:
          description: The matched word
          type: string
        count:
          description: The total amount of times the word is in the transcript
          type: integer
        timestamps:
          description: An array of timestamps
          type: array
          items:
            $ref: "#/components/schemas/WordSearchTimestamp"
        indexes:
          description: An array of all index locations for that word within the `words` array of the completed transcript
          type: array
          items:
            type: integer
      required:
        - text
        - count
        - timestamps
        - indexes
      example:
        {
          text: "smoke",
          count: 6,
          timestamps:
            [
              [250, 650],
              [49168, 49398],
              [55284, 55594],
              [168888, 169118],
              [215108, 215386],
              [225944, 226170],
            ],
          indexes: [0, 136, 156, 486, 652, 698],
        }

    WordSearchTimestamp:
      description: An array of timestamps structured as [`start_time`, `end_time`] in milliseconds
      x-fern-sdk-group-name: transcripts
      type: array
      items:
        type: integer
      example:
        [250, 650]

    Timestamp:
      description: Timestamp containing a start and end property in milliseconds
      x-fern-sdk-group-name: transcripts
      type: object
      additionalProperties: false
      properties:
        start:
          description: The start time in milliseconds
          type: integer
        end:
          description: The end time in milliseconds
          type: integer
      required:
        - start
        - end
      example:
        { start: 3978, end: 5114 }

    # This type is used by the Transcriber
    TranscriptOptionalParams:
      description: The parameters for creating a transcript
      x-fern-sdk-group-name: transcripts
      type: object
      additionalProperties: false
      properties:
        language_code:
          description: |
            The language of your audio file. Possible values are found in [Supported Languages](https://www.assemblyai.com/docs/concepts/supported-languages).
            The default value is 'en_us'.
          oneOf:
            - $ref: "#/components/schemas/TranscriptLanguageCode"
            - type: "null"

        punctuate:
          description: Enable Automatic Punctuation, can be true or false
          type: boolean

        format_text:
          description: Enable Text Formatting, can be true or false
          type: boolean

        dual_channel:
          description: Enable [Dual Channel](https://www.assemblyai.com/docs/models/speech-recognition#dual-channel-transcription) transcription, can be true or false.
          type: boolean

        webhook_url:
          description: The URL to which AssemblyAI send webhooks upon trancription completion
          type: string

        webhook_auth_header_name:
          description: The header name which should be sent back with webhook calls
          type: [string, "null"]
          default: null

        webhook_auth_header_value:
          description: Specify a header name and value to send back with a webhook call for added security
          type: [string, "null"]
          default: null

        auto_highlights:
          description: Whether Key Phrases is enabled, either true or false
          type: boolean

        audio_start_from:
          description: The point in time, in milliseconds, to begin transcribing in your media file
          type: integer

        audio_end_at:
          description: The point in time, in milliseconds, to stop transcribing in your media file
          type: integer

        word_boost:
          description: The list of custom vocabulary to boost transcription probability for
          type: array
          items:
            type: string

        boost_param:
          description: The word boost parameter value
          $ref: "#/components/schemas/TranscriptBoostParam"

        filter_profanity:
          description: Filter profanity from the transcribed text, can be true or false
          type: boolean

        redact_pii:
          description: Redact PII from the transcribed text using the Redact PII model, can be true or false
          type: boolean

        redact_pii_audio:
          description: Generate a copy of the original media file with spoken PII "beeped" out, can be true or false. See [PII redaction](https://www.assemblyai.com/docs/models/pii-redaction) for more details.
          type: boolean

        redact_pii_audio_quality:
          description: Controls the filetype of the audio created by redact_pii_audio. Currently supports mp3 (default) and wav. See [PII redaction](https://www.assemblyai.com/docs/models/pii-redaction) for more details.
          default: mp3
          $ref: "#/components/schemas/RedactPiiAudioQuality"

        redact_pii_policies:
          description: The list of PII Redaction policies to enable. See [PII redaction](https://www.assemblyai.com/docs/models/pii-redaction) for more details.
          type: array
          items:
            $ref: "#/components/schemas/PiiPolicy"

        redact_pii_sub:
          description: The replacement logic for detected PII, can be "entity_type" or "hash". See [PII redaction](https://www.assemblyai.com/docs/models/pii-redaction) for more details.
          oneOf:
            - $ref: "#/components/schemas/SubstitutionPolicy"
            - type: "null"

        speaker_labels:
          description: Enable [Speaker diarization](https://www.assemblyai.com/docs/models/speaker-diarization), can be true or false
          type: boolean

        speakers_expected:
          description: Tells the speaker label model how many speakers it should attempt to identify, up to 10. See [Speaker diarization](https://www.assemblyai.com/docs/models/speaker-diarization) for more details.
          type: [integer, "null"]
          default: null

        content_safety:
          description: Enable [Content Moderation](https://www.assemblyai.com/docs/models/content-moderation), can be true or false
          type: boolean

        content_safety_confidence:
          description: The confidence threshold for content moderation. Values must be between 25 and 100.
          type: integer

        iab_categories:
          description: Enable [Topic Detection](https://www.assemblyai.com/docs/models/topic-detection), can be true or false
          type: boolean

        language_detection:
          description: Whether [Automatic language detection](https://www.assemblyai.com/docs/models/speech-recognition#automatic-language-detection) was enabled in the transcription request, either true or false.
          type: boolean

        custom_spelling:
          description: Customize how words are spelled and formatted using to and from values
          type: array
          items:
            $ref: "#/components/schemas/TranscriptCustomSpelling"

        disfluencies:
          description: Transcribe Filler Words, like "umm", in your media file; can be true or false
          type: boolean

        sentiment_analysis:
          description: Enable [Sentiment Analysis](https://www.assemblyai.com/docs/models/sentiment-analysis), can be true or false
          type: boolean

        auto_chapters:
          description: Enable [Auto Chapters](https://www.assemblyai.com/docs/models/auto-chapters), can be true or false
          type: boolean

        entity_detection:
          description: Enable [Entity Detection](https://www.assemblyai.com/docs/models/entity-detection), can be true or false
          type: boolean

        speech_threshold:
          description: |
            Reject audio files that contain less than this fraction of speech.
            Valid values are in the range [0, 1] inclusive.
          type: [number, "null"]
          format: float
          minimum: 0
          maximum: 1
          default: null

        summarization:
          description: Enable [Summarization](https://www.assemblyai.com/docs/models/summarization), can be true or false
          type: boolean

        summary_model:
          description: The model to summarize the transcript
          default: informative
          $ref: "#/components/schemas/SummaryModel"

        summary_type:
          description: The type of summary
          default: bullets
          $ref: "#/components/schemas/SummaryType"

        custom_topics:
          description: Whether custom topics is enabled, either true or false
          type: boolean

        topics:
          description: The list of custom topics provided, if custom topics is enabled
          type: array
          items:
            type: string
      example:
        {
          language_code: "en_us",
          punctuate: true,
          format_text: true,
          dual_channel: true,
          webhook_url: "https://your-webhook-url/path",
          webhook_auth_header_name: "webhook-secret",
          webhook_auth_header_value: "webhook-secret-value",
          auto_highlights: true,
          audio_start_from: 10,
          audio_end_at: 280,
          word_boost: ["aws", "azure", "google cloud"],
          boost_param: "high",
          filter_profanity: true,
          redact_pii: true,
          redact_pii_audio: true,
          redact_pii_audio_quality: "mp3",
          redact_pii_policies: ["us_social_security_number", "credit_card_number"],
          redact_pii_sub: "hash",
          speaker_labels: true,
          speakers_expected: 2,
          content_safety: true,
          iab_categories: true,
          language_detection: false,
          custom_spelling: [],
          disfluencies: false,
          sentiment_analysis: true,
          auto_chapters: true,
          entity_detection: true,
          speech_threshold: 0.5,
          summarization: true,
          summary_model: "informative",
          summary_type: "bullets",
          custom_topics: true,
          topics: [],
        }

    TranscriptParams:
      description: The parameters for creating a transcript
      x-fern-sdk-group-name: transcripts
      type: object
      additionalProperties: false
      allOf:
        - $ref: "#/components/schemas/TranscriptOptionalParams"
        - type: object
          required: [audio_url]
          properties:
            audio_url:
              description: The URL of the audio or video file to transcribe.
              type: string
      example:
        {
          language_code: "en_us",
          audio_url: "https://github.com/AssemblyAI-Examples/audio-examples/raw/main/20230607_me_canadian_wildfires.mp3",
          punctuate: true,
          format_text: true,
          dual_channel: true,
          webhook_url: "https://your-webhook-url/path",
          webhook_auth_header_name: "webhook-secret",
          webhook_auth_header_value: "webhook-secret-value",
          auto_highlights: true,
          audio_start_from: 10,
          audio_end_at: 280,
          word_boost: ["aws", "azure", "google cloud"],
          boost_param: "high",
          filter_profanity: true,
          redact_pii: true,
          redact_pii_audio: true,
          redact_pii_audio_quality: "mp3",
          redact_pii_policies: ["us_social_security_number", "credit_card_number"],
          redact_pii_sub: "hash",
          speaker_labels: true,
          speakers_expected: 2,
          content_safety: true,
          iab_categories: true,
          language_detection: false,
          custom_spelling: [],
          disfluencies: false,
          sentiment_analysis: true,
          auto_chapters: true,
          entity_detection: true,
          speech_threshold: 0.5,
          summarization: true,
          summary_model: "informative",
          summary_type: "bullets",
          custom_topics: true,
          topics: [],
        }

    SummaryModel:
      type: string
      description: The model to summarize the transcript
      x-fern-sdk-group-name: transcripts
      default: informative
      enum:
        - informative
        - conversational
        - catchy

    SummaryType:
      type: string
      description: The type of summary
      x-fern-sdk-group-name: transcripts
      default: bullets
      enum:
        - bullets
        - bullets_verbose
        - gist
        - headline
        - paragraph

    TranscriptBoostParam:
      type: string
      description: The word boost parameter value
      x-fern-sdk-group-name: transcripts
      enum:
        - low
        - default
        - high

    TranscriptCustomSpelling:
      description: Object containing words or phrases to replace, and the word or phrase to replace with
      x-fern-sdk-group-name: transcripts
      type: object
      additionalProperties: false
      properties:
        from:
          description: Words or phrases to replace
          type: array
          items:
            description: Word or phrase to replace
            type: string
        to:
          description: Word or phrase to replace with
          type: string
      required: [from, to]
      example:
        { from: ["dicarlo"], to: "Decarlo" }

    TranscriptUtterance:
      type: object
      x-fern-sdk-group-name: transcripts
      additionalProperties: false
      properties:
        confidence:
          description: The confidence score for the transcript of this utterance
          type: number
          format: double
          minimum: 0
          maximum: 1
        start:
          description: The starting time, in milliseconds, of the utterance in the audio file
          type: integer
        end:
          description: The ending time, in milliseconds, of the utterance in the audio file
          type: integer
        text:
          description: The text for this utterance
          type: string
        words:
          description: The words in the utterance.
          type: array
          items:
            $ref: "#/components/schemas/TranscriptWord"
        speaker:
          description: The speaker of this utterance, where each speaker is assigned a sequential capital letter - e.g. "A" for Speaker A, "B" for Speaker B, etc.
          type: string
      required:
        - confidence
        - start
        - end
        - text
        - words
        - speaker
      example:
        {
          confidence: 0.9359033333333334,
          end: 26950,
          speaker: "A",
          start: 250,
          text: "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. And in some places, the air quality warnings include the warning to stay inside. We wanted to better understand what's happening here and why, so we called Peter de Carlo, an associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University Varsity. Good morning, professor.",
          words:
            [
              {
                text: "Smoke",
                start: 250,
                end: 650,
                confidence: 0.97503,
                speaker: "A",
              },
              {
                text: "from",
                start: 730,
                end: 1022,
                confidence: 0.99999,
                speaker: "A",
              },
              {
                text: "hundreds",
                start: 1076,
                end: 1418,
                confidence: 0.99843,
                speaker: "A",
              },
              {
                text: "of",
                start: 1434,
                end: 1614,
                confidence: 0.85,
                speaker: "A",
              },
              {
                text: "wildfires",
                start: 1652,
                end: 2346,
                confidence: 0.89657,
                speaker: "A",
              },
              {
                text: "in",
                start: 2378,
                end: 2526,
                confidence: 0.99994,
                speaker: "A",
              },
              {
                text: "Canada",
                start: 2548,
                end: 3130,
                confidence: 0.93864,
                speaker: "A",
              },
              {
                text: "is",
                start: 3210,
                end: 3454,
                confidence: 0.999,
                speaker: "A",
              },
              {
                text: "triggering",
                start: 3492,
                end: 3946,
                confidence: 0.75366,
                speaker: "A",
              },
              {
                text: "air",
                start: 3978,
                end: 4174,
                confidence: 1.0,
                speaker: "A",
              },
              {
                text: "quality",
                start: 4212,
                end: 4558,
                confidence: 0.87745,
                speaker: "A",
              },
              {
                text: "alerts",
                start: 4644,
                end: 5114,
                confidence: 0.94739,
                speaker: "A",
              },
              {
                text: "throughout",
                start: 5162,
                end: 5466,
                confidence: 0.99726,
                speaker: "A",
              },
              {
                text: "the",
                start: 5498,
                end: 5694,
                confidence: 0.79,
                speaker: "A",
              },
              {
                text: "US.",
                start: 5732,
                end: 6382,
                confidence: 0.88,
                speaker: "A",
              },
            ],
        }

    SubstitutionPolicy:
      type: string
      x-fern-sdk-group-name: transcripts
      description: The replacement logic for detected PII, can be "entity_type" or "hash". See [PII redaction](https://www.assemblyai.com/docs/models/pii-redaction) for more details.
      enum:
        - entity_type
        - hash

    RedactPiiAudioQuality:
      type: string
      description: Controls the filetype of the audio created by redact_pii_audio. Currently supports mp3 (default) and wav. See [PII redaction](https://www.assemblyai.com/docs/models/pii-redaction) for more details.
      x-fern-sdk-group-name: transcripts
      default: mp3
      enum:
        - mp3
        - wav
      example:
        "mp3"

    PiiPolicy:
      type: string
      x-fern-sdk-group-name: transcripts
      enum:
        - medical_process
        - medical_condition
        - blood_type
        - drug
        - injury
        - number_sequence
        - email_address
        - date_of_birth
        - phone_number
        - us_social_security_number
        - credit_card_number
        - credit_card_expiration
        - credit_card_cvv
        - date
        - nationality
        - event
        - language
        - location
        - money_amount
        - person_name
        - person_age
        - organization
        - political_affiliation
        - occupation
        - religion
        - drivers_license
        - banking_information

    TranscriptLanguageCode:
      type: string
      description: |
        The language of your audio file. Possible values are found in [Supported Languages](https://www.assemblyai.com/docs/concepts/supported-languages).
        The default value is 'en_us'.
      x-fern-sdk-group-name: transcripts
      default: en_us
      enum:
        - en
        - en_au
        - en_uk
        - en_us
        - es
        - fr
        - de
        - it
        - pt
        - nl
        - hi
        - ja
        - zh
        - fi
        - ko
        - pl
        - ru
        - tr
        - uk
        - vi

    TranscriptStatus:
      type: string
      description: The status of your transcript. Possible values are queued, processing, completed, or error.
      x-fern-sdk-group-name: transcripts
      enum:
        - queued
        - processing
        - completed
        - error
      x-fern-enum:
        queued:
          description: The audio file is in the queue to be processed by the API.
        processing:
          description: The audio file is being processed by the API.
        completed:
          description: The transcript job has been completed successfully.
        error:
          description: An error occurred while processing the audio file.

    Transcript:
      description: A transcript object
      type: object
      x-fern-sdk-group-name: transcripts
      additionalProperties: false
      properties:
        id:
          description: The unique identifier of your transcript
          type: string
          format: uuid

        language_model:
          description: The language model that was used for the transcript
          type: string
          deprecated: true

        acoustic_model:
          description: The acoustic model that was used for the transcript
          type: string
          deprecated: true

        status:
          description: The status of your transcript. Possible values are queued, processing, completed, or error.
          $ref: "#/components/schemas/TranscriptStatus"

        language_code:
          description: |
            The language of your audio file.
            Possible values are found in [Supported Languages](https://www.assemblyai.com/docs/concepts/supported-languages).
            The default value is 'en_us'.
          $ref: "#/components/schemas/TranscriptLanguageCode"

        audio_url:
          description: The URL of the media that was transcribed
          type: string

        text:
          description: The textual transcript of your media file
          type: [string, "null"]

        words:
          description: |
            An array of temporally-sequential word objects, one for each word in the transcript.
            See [Speech recognition](https://www.assemblyai.com/docs/models/speech-recognition) for more information.
          type: [array, "null"]
          items:
            $ref: "#/components/schemas/TranscriptWord"

        utterances:
          description: |
            When dual_channel or speaker_labels is enabled, a list of turn-by-turn utterance objects.
            See [Speaker diarization](https://www.assemblyai.com/docs/models/speaker-diarization) for more information.
          type: [array, "null"]
          items:
            $ref: "#/components/schemas/TranscriptUtterance"

        confidence:
          description: The confidence score for the transcript, between 0.0 (low confidence) and 1.0 (high confidence)
          type: [number, "null"]
          format: double
          minimum: 0
          maximum: 1

        audio_duration:
          description: The duration of this transcript object's media file, in seconds
          type: [number, "null"]
          format: float

        punctuate:
          description: Whether Automatic Punctuation is enabled, either true or false
          type: [boolean, "null"]

        format_text:
          description: Whether Text Formatting is enabled, either true or false
          type: [boolean, "null"]

        dual_channel:
          description: Whether [Dual channel transcription](https://www.assemblyai.com/docs/models/speech-recognition#dual-channel-transcription) was enabled in the transcription request, either true or false
          type: [boolean, "null"]

        webhook_url:
          description: The URL to which we send webhooks upon trancription completion
          type: [string, "null"]

        webhook_status_code:
          description: The status code we received from your server when delivering your webhook, if a webhook URL was provided
          type: [integer, "null"]

        webhook_auth:
          description: Whether webhook authentication details were provided
          type: boolean

        webhook_auth_header_name:
          description: The header name which should be sent back with webhook calls
          type: [string, "null"]

        speed_boost:
          description: Whether speed boost is enabled
          type: [boolean, "null"]
          deprecated: true

        auto_highlights:
          description: Whether Key Phrases is enabled, either true or false
          type: boolean

        auto_highlights_result:
          description: |
            An array of results for the Key Phrases model, if it is enabled.
            See [Key phrases](https://www.assemblyai.com/docs/models/key-phrases) for more information.
          oneOf:
            - $ref: "#/components/schemas/AutoHighlightsResult"
            - type: "null"

        audio_start_from:
          description: The point in time, in milliseconds, in the file at which the transcription was started
          type: [integer, "null"]

        audio_end_at:
          description: The point in time, in milliseconds, in the file at which the transcription was terminated
          type: [integer, "null"]

        word_boost:
          description: The list of custom vocabulary to boost transcription probability for
          type: array
          items:
            type: string

        boost_param:
          description: The word boost parameter value
          type: [string, "null"]

        filter_profanity:
          description: Whether [Profanity Filtering](https://www.assemblyai.com/docs/models/speech-recognition#profanity-filtering) is enabled, either true or false
          type: [boolean, "null"]

        redact_pii:
          description: Whether [PII Redaction](https://www.assemblyai.com/docs/models/pii-redaction) is enabled, either true or false
          type: boolean

        redact_pii_audio:
          description: |
            Whether a redacted version of the audio file was generated,
            either true or false. See [PII redaction](https://www.assemblyai.com/docs/models/pii-redaction) for more information.
          type: [boolean, "null"]

        redact_pii_audio_quality:
          description: |
            The audio quality of the PII-redacted audio file, if redact_pii_audio is enabled.
            See [PII redaction](https://www.assemblyai.com/docs/models/pii-redaction) for more information.
          oneOf:
            - $ref: "#/components/schemas/RedactPiiAudioQuality"
            - type: "null"

        redact_pii_policies:
          description: |
            The list of PII Redaction policies that were enabled, if PII Redaction is enabled.
            See [PII redaction](https://www.assemblyai.com/docs/models/pii-redaction) for more information.
          type: [array, "null"]
          items:
            $ref: "#/components/schemas/PiiPolicy"

        redact_pii_sub:
          description: The replacement logic for detected PII, can be "entity_type" or "hash". See [PII redaction](https://www.assemblyai.com/docs/models/pii-redaction) for more details.
          $ref: "#/components/schemas/SubstitutionPolicy"

        speaker_labels:
          description: Whether [Speaker diarization](https://www.assemblyai.com/docs/models/speaker-diarization) is enabled, can be true or false
          type: [boolean, "null"]

        speakers_expected:
          description: Tell the speaker label model how many speakers it should attempt to identify, up to 10. See [Speaker diarization](https://www.assemblyai.com/docs/models/speaker-diarization) for more details.
          type: [integer, "null"]

        content_safety:
          description: Whether [Content Moderation](https://www.assemblyai.com/docs/models/content-moderation) is enabled, can be true or false
          type: [boolean, "null"]

        content_safety_labels:
          description: |
            An array of results for the Content Moderation model, if it is enabled.
            See [Content moderation](https://www.assemblyai.com/docs/models/content-moderation) for more information.
          oneOf:
            - $ref: "#/components/schemas/ContentSafetyLabelsResult"
            - type: "null"

        iab_categories:
          description: Whether [Topic Detection](https://www.assemblyai.com/docs/models/topic-detection) is enabled, can be true or false
          type: [boolean, "null"]

        iab_categories_result:
          description: |
            The result of the Topic Detection model, if it is enabled.
            See [Topic Detection](https://www.assemblyai.com/docs/models/topic-detection) for more information.
          oneOf:
            - $ref: "#/components/schemas/TopicDetectionModelResult"
            - type: "null"

        language_detection:
          description: Whether [Automatic language detection](https://www.assemblyai.com/docs/models/speech-recognition#automatic-language-detection) is enabled, either true or false
          type: [boolean, "null"]

        custom_spelling:
          description: Customize how words are spelled and formatted using to and from values
          type: [array, "null"]
          items:
            $ref: "#/components/schemas/TranscriptCustomSpelling"

        auto_chapters:
          description: Whether [Auto Chapters](https://www.assemblyai.com/docs/models/auto-chapters) is enabled, can be true or false
          type: [boolean, "null"]

        chapters:
          description: An array of temporally sequential chapters for the audio file
          type: [array, "null"]
          items:
            $ref: "#/components/schemas/Chapter"

        summarization:
          description: Whether [Summarization](https://www.assemblyai.com/docs/models/summarization) is enabled, either true or false
          type: boolean

        summary_type:
          description: The type of summary generated, if [Summarization](https://www.assemblyai.com/docs/models/summarization) is enabled
          type: [string, "null"]

        summary_model:
          description: |
            The Summarization model used to generate the summary,
            if [Summarization](https://www.assemblyai.com/docs/models/summarization) is enabled
          type: [string, "null"]

        summary:
          description: The generated summary of the media file, if [Summarization](https://www.assemblyai.com/docs/models/summarization) is enabled
          type: [string, "null"]

        custom_topics:
          description: Whether custom topics is enabled, either true or false
          type: [boolean, "null"]

        topics:
          description: The list of custom topics provided if custom topics is enabled
          type: array
          items:
            type: string

        disfluencies:
          description: Transcribe Filler Words, like "umm", in your media file; can be true or false
          type: [boolean, "null"]

        sentiment_analysis:
          description: Whether [Sentiment Analysis](https://www.assemblyai.com/docs/models/sentiment-analysis) is enabled, can be true or false
          type: [boolean, "null"]

        sentiment_analysis_results:
          description: |
            An array of results for the Sentiment Analysis model, if it is enabled.
            See [Sentiment analysis](https://www.assemblyai.com/docs/models/sentiment-analysis) for more information.
          type: [array, "null"]
          items:
            $ref: "#/components/schemas/SentimentAnalysisResult"

        entity_detection:
          description: Whether [Entity Detection](https://www.assemblyai.com/docs/models/entity-detection) is enabled, can be true or false
          type: [boolean, "null"]

        entities:
          description: |
            An array of results for the Entity Detection model, if it is enabled.
            See [Entity detection](https://www.assemblyai.com/docs/models/entity-detection) for more information.
          type: [array, "null"]
          items:
            $ref: "#/components/schemas/Entity"

        speech_threshold:
          description: |
            Defaults to null. Reject audio files that contain less than this fraction of speech.
            Valid values are in the range [0, 1] inclusive.
          type: [number, "null"]
          minimum: 0
          maximum: 1
          format: float

        throttled:
          description: True while a request is throttled and false when a request is no longer throttled
          type: [boolean, "null"]

        error:
          description: Error message of why the transcript failed
          type: string
      required:
        - id
        - language_model
        - acoustic_model
        - status
        - audio_url
        - webhook_auth
        - auto_highlights
        - redact_pii
        - summarization
      example:
        {
          id: "9ea68fd3-f953-42c1-9742-976c447fb463",
          language_model: "assemblyai_default",
          acoustic_model: "assemblyai_default",
          language_code: "en_us",
          status: "completed",
          audio_url: "https://github.com/AssemblyAI-Examples/audio-examples/raw/main/20230607_me_canadian_wildfires.mp3",
          text: "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. And in some places, the air quality warnings include the warning to stay inside. We wanted to better understand what's happening here and why, so we called Peter de Carlo, an associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University Varsity. Good morning, professor. Good morning. What is it about the conditions right now that have caused this round of wildfires to affect so many people so far away? Well, there's a couple of things. The season has been pretty dry already. And then the fact that we're getting hit in the US. Is because there's a couple of weather systems that are essentially channeling the smoke from those Canadian wildfires through Pennsylvania into the Mid Atlantic and the Northeast and kind of just dropping the smoke there. So what is it in this haze that makes it harmful? And I'm assuming it is harmful. It is. The levels outside right now in Baltimore are considered unhealthy. And most of that is due to what's called particulate matter, which are tiny particles, microscopic smaller than the width of your hair that can get into your lungs and impact your respiratory system, your cardiovascular system, and even your neurological your brain. What makes this particularly harmful? Is it the volume of particulant? Is it something in particular? What is it exactly? Can you just drill down on that a little bit more? Yeah. So the concentration of particulate matter I was looking at some of the monitors that we have was reaching levels of what are, in science, big 150 micrograms per meter cubed, which is more than ten times what the annual average should be and about four times higher than what you're supposed to have on a 24 hours average. And so the concentrations of these particles in the air are just much, much higher than we typically see. And exposure to those high levels can lead to a host of health problems. And who is most vulnerable? I noticed that in New York City, for example, they're canceling outdoor activities. And so here it is in the early days of summer, and they have to keep all the kids inside. So who tends to be vulnerable in a situation like this? It's the youngest. So children, obviously, whose bodies are still developing. The elderly, who are their bodies are more in decline and they're more susceptible to the health impacts of breathing, the poor air quality. And then people who have preexisting health conditions, people with respiratory conditions or heart conditions can be triggered by high levels of air pollution. Could this get worse? That's a good question. In some areas, it's much worse than others. And it just depends on kind of where the smoke is concentrated. I think New York has some of the higher concentrations right now, but that's going to change as that air moves away from the New York area. But over the course of the next few days, we will see different areas being hit at different times with the highest concentrations. I was going to ask you about more fires start burning. I don't expect the concentrations to go up too much higher. I was going to ask you how and you started to answer this, but how much longer could this last? Or forgive me if I'm asking you to speculate, but what do you think? Well, I think the fires are going to burn for a little bit longer, but the key for us in the US. Is the weather system changing. And so right now, it's kind of the weather systems that are pulling that air into our mid Atlantic and Northeast region. As those weather systems change and shift, we'll see that smoke going elsewhere and not impact us in this region as much. And so I think that's going to be the defining factor. And I think the next couple of days we're going to see a shift in that weather pattern and start to push the smoke away from where we are. And finally, with the impacts of climate change, we are seeing more wildfires. Will we be seeing more of these kinds of wide ranging air quality consequences or circumstances? I mean, that is one of the predictions for climate change. Looking into the future, the fire season is starting earlier and lasting longer, and we're seeing more frequent fires. So, yeah, this is probably something that we'll be seeing more frequently. This tends to be much more of an issue in the Western US. So the eastern US. Getting hit right now is a little bit new. But yeah, I think with climate change moving forward, this is something that is going to happen more frequently. That's Peter De Carlo, associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University. Sergeant Carlo, thanks so much for joining us and sharing this expertise with us. Thank you for having me.",
          words:
            [
              {
                text: "Smoke",
                start: 250,
                end: 650,
                confidence: 0.97465,
                speaker: null,
              },
              {
                text: "from",
                start: 730,
                end: 1022,
                confidence: 0.99999,
                speaker: null,
              },
              {
                text: "hundreds",
                start: 1076,
                end: 1418,
                confidence: 0.99844,
                speaker: null,
              },
              {
                text: "of",
                start: 1434,
                end: 1614,
                confidence: 0.84,
                speaker: null,
              },
              {
                text: "wildfires",
                start: 1652,
                end: 2346,
                confidence: 0.89572,
                speaker: null,
              },
              {
                text: "in",
                start: 2378,
                end: 2526,
                confidence: 0.99994,
                speaker: null,
              },
              {
                text: "Canada",
                start: 2548,
                end: 3130,
                confidence: 0.93953,
                speaker: null,
              },
              {
                text: "is",
                start: 3210,
                end: 3454,
                confidence: 0.999,
                speaker: null,
              },
              {
                text: "triggering",
                start: 3492,
                end: 3946,
                confidence: 0.74794,
                speaker: null,
              },
              {
                text: "air",
                start: 3978,
                end: 4174,
                confidence: 1.0,
                speaker: null,
              },
              {
                text: "quality",
                start: 4212,
                end: 4558,
                confidence: 0.88077,
                speaker: null,
              },
              {
                text: "alerts",
                start: 4644,
                end: 5114,
                confidence: 0.94814,
                speaker: null,
              },
              {
                text: "throughout",
                start: 5162,
                end: 5466,
                confidence: 0.99726,
                speaker: null,
              },
              {
                text: "the",
                start: 5498,
                end: 5694,
                confidence: 0.79,
                speaker: null,
              },
              {
                text: "US.",
                start: 5732,
                end: 6382,
                confidence: 0.89,
                speaker: null,
              },
            ],
          utterances:
            [
              {
                confidence: 0.9359033333333334,
                end: 26950,
                speaker: "A",
                start: 250,
                text: "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. And in some places, the air quality warnings include the warning to stay inside. We wanted to better understand what's happening here and why, so we called Peter de Carlo, an associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University Varsity. Good morning, professor.",
                words:
                  [
                    {
                      text: "Smoke",
                      start: 250,
                      end: 650,
                      confidence: 0.97503,
                      speaker: "A",
                    },
                    {
                      text: "from",
                      start: 730,
                      end: 1022,
                      confidence: 0.99999,
                      speaker: "A",
                    },
                    {
                      text: "hundreds",
                      start: 1076,
                      end: 1418,
                      confidence: 0.99843,
                      speaker: "A",
                    },
                    {
                      text: "of",
                      start: 1434,
                      end: 1614,
                      confidence: 0.85,
                      speaker: "A",
                    },
                    {
                      text: "wildfires",
                      start: 1652,
                      end: 2346,
                      confidence: 0.89657,
                      speaker: "A",
                    },
                    {
                      text: "in",
                      start: 2378,
                      end: 2526,
                      confidence: 0.99994,
                      speaker: "A",
                    },
                    {
                      text: "Canada",
                      start: 2548,
                      end: 3130,
                      confidence: 0.93864,
                      speaker: "A",
                    },
                    {
                      text: "is",
                      start: 3210,
                      end: 3454,
                      confidence: 0.999,
                      speaker: "A",
                    },
                    {
                      text: "triggering",
                      start: 3492,
                      end: 3946,
                      confidence: 0.75366,
                      speaker: "A",
                    },
                    {
                      text: "air",
                      start: 3978,
                      end: 4174,
                      confidence: 1.0,
                      speaker: "A",
                    },
                    {
                      text: "quality",
                      start: 4212,
                      end: 4558,
                      confidence: 0.87745,
                      speaker: "A",
                    },
                    {
                      text: "alerts",
                      start: 4644,
                      end: 5114,
                      confidence: 0.94739,
                      speaker: "A",
                    },
                    {
                      text: "throughout",
                      start: 5162,
                      end: 5466,
                      confidence: 0.99726,
                      speaker: "A",
                    },
                    {
                      text: "the",
                      start: 5498,
                      end: 5694,
                      confidence: 0.79,
                      speaker: "A",
                    },
                    {
                      text: "US.",
                      start: 5732,
                      end: 6382,
                      confidence: 0.88,
                      speaker: "A",
                    },
                  ],
              },
            ],
          confidence: 0.9404651451800253,
          audio_duration: 281,
          punctuate: true,
          format_text: true,
          dual_channel: false,
          webhook_url: "https://your-webhook-url/path",
          webhook_status_code: 200,
          webhook_auth: true,
          webhook_auth_header_name: "webhook-secret",
          auto_highlights_result:
            {
              status: "success",
              results:
                [
                  {
                    count: 1,
                    rank: 0.08,
                    text: "air quality alerts",
                    timestamps: [{ start: 3978, end: 5114 }],
                  },
                  {
                    count: 1,
                    rank: 0.08,
                    text: "wide ranging air quality consequences",
                    timestamps: [{ start: 235388, end: 238694 }],
                  },
                  {
                    count: 1,
                    rank: 0.07,
                    text: "more wildfires",
                    timestamps: [{ start: 230972, end: 232354 }],
                  },
                  {
                    count: 1,
                    rank: 0.07,
                    text: "air pollution",
                    timestamps: [{ start: 156004, end: 156910 }],
                  },
                  {
                    count: 3,
                    rank: 0.07,
                    text: "weather systems",
                    timestamps:
                      [
                        { start: 47344, end: 47958 },
                        { start: 205268, end: 205818 },
                        { start: 211588, end: 213434 },
                      ],
                  },
                  {
                    count: 2,
                    rank: 0.06,
                    text: "high levels",
                    timestamps:
                      [
                        { start: 121128, end: 121646 },
                        { start: 155412, end: 155866 },
                      ],
                  },
                  {
                    count: 1,
                    rank: 0.06,
                    text: "health conditions",
                    timestamps: [{ start: 152138, end: 152666 }],
                  },
                  {
                    count: 2,
                    rank: 0.06,
                    text: "Peter de Carlo",
                    timestamps:
                      [
                        { start: 18948, end: 19930 },
                        { start: 268298, end: 269194 },
                      ],
                  },
                  {
                    count: 1,
                    rank: 0.06,
                    text: "New York City",
                    timestamps: [{ start: 125768, end: 126274 }],
                  },
                  {
                    count: 1,
                    rank: 0.05,
                    text: "respiratory conditions",
                    timestamps: [{ start: 152964, end: 153786 }],
                  },
                  {
                    count: 3,
                    rank: 0.05,
                    text: "New York",
                    timestamps:
                      [
                        { start: 125768, end: 126034 },
                        { start: 171448, end: 171938 },
                        { start: 176008, end: 176322 },
                      ],
                  },
                  {
                    count: 3,
                    rank: 0.05,
                    text: "climate change",
                    timestamps:
                      [
                        { start: 229548, end: 230230 },
                        { start: 244576, end: 245162 },
                        { start: 263348, end: 263950 },
                      ],
                  },
                  {
                    count: 1,
                    rank: 0.05,
                    text: "Johns Hopkins University Varsity",
                    timestamps: [{ start: 23972, end: 25490 }],
                  },
                  {
                    count: 1,
                    rank: 0.05,
                    text: "heart conditions",
                    timestamps: [{ start: 153988, end: 154506 }],
                  },
                  {
                    count: 1,
                    rank: 0.05,
                    text: "air quality warnings",
                    timestamps: [{ start: 12308, end: 13434 }],
                  },
                ],
            },
          auto_highlights: true,
          audio_start_from: 10,
          audio_end_at: 280,
          word_boost: ["aws", "azure", "google cloud"],
          boost_param: "high",
          filter_profanity: true,
          redact_pii: true,
          redact_pii_audio: true,
          redact_pii_audio_quality: "mp3",
          redact_pii_policies: ["us_social_security_number", "credit_card_number"],
          redact_pii_sub: "hash",
          speaker_labels: true,
          content_safety: true,
          iab_categories: true,
          content_safety_labels:
            {
              status: "success",
              results:
                [
                  {
                    text: "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. And in some places, the air quality warnings include the warning to stay inside. We wanted to better understand what's happening here and why, so we called Peter de Carlo, an associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University Varsity. Good morning, professor. Good morning.",
                    labels:
                      [
                        {
                          label: "disasters",
                          confidence: 0.8142836093902588,
                          severity: 0.4093044400215149,
                        },
                      ],
                    sentences_idx_start: 0,
                    sentences_idx_end: 5,
                    timestamp: { start: 250, end: 28840 },
                  },
                ],
              summary:
                {
                  disasters: 0.9940800441842205,
                  health_issues: 0.9216489289040967,
                },
              severity_score_summary:
                {
                  disasters:
                    {
                      low: 0.5733263024656846,
                      medium: 0.42667369753431533,
                      high: 0.0,
                    },
                  health_issues:
                    {
                      low: 0.22863814977924785,
                      medium: 0.45014154926938227,
                      high: 0.32122030095136983,
                    },
                },
            },
          iab_categories_result:
            {
              status: "success",
              results:
                [
                  {
                    text: "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. And in some places, the air quality warnings include the warning to stay inside. We wanted to better understand what's happening here and why, so we called Peter de Carlo, an associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University Varsity. Good morning, professor. Good morning.",
                    labels:
                      [
                        {
                          relevance: 0.988274097442627,
                          label: "Home&Garden>IndoorEnvironmentalQuality",
                        },
                        {
                          relevance: 0.5821335911750793,
                          label: "NewsAndPolitics>Weather",
                        },
                        {
                          relevance: 0.0042327106930315495,
                          label: "MedicalHealth>DiseasesAndConditions>LungAndRespiratoryHealth",
                        },
                        {
                          relevance: 0.0033971222583204508,
                          label: "NewsAndPolitics>Disasters",
                        },
                        {
                          relevance: 0.002469958271831274,
                          label: "BusinessAndFinance>Business>GreenSolutions",
                        },
                        {
                          relevance: 0.0014376690378412604,
                          label: "MedicalHealth>DiseasesAndConditions>Cancer",
                        },
                        {
                          relevance: 0.0014294233405962586,
                          label: "Science>Environment",
                        },
                        {
                          relevance: 0.001234519761055708,
                          label: "Travel>TravelLocations>PolarTravel",
                        },
                        {
                          relevance: 0.0010231725173071027,
                          label: "MedicalHealth>DiseasesAndConditions>ColdAndFlu",
                        },
                        {
                          relevance: 0.0007445293595083058,
                          label: "BusinessAndFinance>Industries>PowerAndEnergyIndustry",
                        },
                      ],
                    timestamp: { start: 250, end: 28840 },
                  },
                ],
              summary:
                {
                  "NewsAndPolitics>Weather": 1.0,
                  "Home&Garden>IndoorEnvironmentalQuality": 0.9043831825256348,
                  "Science>Environment": 0.16117265820503235,
                  "BusinessAndFinance>Industries>EnvironmentalServicesIndustry": 0.14393523335456848,
                  "MedicalHealth>DiseasesAndConditions>LungAndRespiratoryHealth": 0.11401086300611496,
                  "BusinessAndFinance>Business>GreenSolutions": 0.06348437070846558,
                  "NewsAndPolitics>Disasters": 0.05041387677192688,
                  "Travel>TravelLocations>PolarTravel": 0.01308488193899393,
                  HealthyLiving: 0.008222488686442375,
                  "MedicalHealth>DiseasesAndConditions>ColdAndFlu": 0.0022315620444715023,
                  "MedicalHealth>DiseasesAndConditions>HeartAndCardiovascularDiseases": 0.00213034451007843,
                  "HealthyLiving>Wellness>SmokingCessation": 0.001540527562610805,
                  "MedicalHealth>DiseasesAndConditions>Injuries": 0.0013950627762824297,
                  "BusinessAndFinance>Industries>PowerAndEnergyIndustry": 0.0012570273829624057,
                  "MedicalHealth>DiseasesAndConditions>Cancer": 0.001097781932912767,
                  "MedicalHealth>DiseasesAndConditions>Allergies": 0.0010148967849090695,
                  "MedicalHealth>DiseasesAndConditions>MentalHealth": 0.000717321818228811,
                  "Style&Fashion>PersonalCare>DeodorantAndAntiperspirant": 0.0006022014422342181,
                  "Technology&Computing>Computing>ComputerNetworking": 0.0005461975233629346,
                  "MedicalHealth>DiseasesAndConditions>Injuries>FirstAid": 0.0004885646631009877,
                },
            },
          language_detection: false,
          custom_spelling: null,
          throttled: null,
          auto_chapters: true,
          summarization: true,
          summary_type: "bullets",
          summary_model: "informative",
          custom_topics: true,
          topics: [],
          speech_threshold: 0.5,
          disfluencies: false,
          sentiment_analysis: true,
          chapters:
            [
              {
                summary: "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. In some places, the air quality warnings include the warning to stay inside.",
                gist: "Smoggy air quality alerts across US",
                headline: "Smoke from hundreds of wildfires in Canada is triggering air quality alerts across US",
                start: 250,
                end: 28840,
              },
              {
                summary: "Air pollution levels in Baltimore are considered unhealthy. Exposure to high levels can lead to a host of health problems. With climate change, we are seeing more wildfires. Will we be seeing more of these kinds of wide ranging air quality consequences?",
                gist: "What is it about the conditions right now that have caused this round",
                headline: "High particulate matter in wildfire smoke can lead to serious health problems",
                start: 29610,
                end: 280340,
              },
            ],
          sentiment_analysis_results: null,
          entity_detection: true,
          entities:
            [
              { entity_type: "location", text: "Canada", start: 2548, end: 3130 },
              { entity_type: "location", text: "the US", start: 5498, end: 6382 },
              { entity_type: "location", text: "Maine", start: 7492, end: 7914 },
              { entity_type: "location", text: "Maryland", start: 8212, end: 8634 },
              {
                entity_type: "location",
                text: "Minnesota",
                start: 8932,
                end: 9578,
              },
              {
                entity_type: "person_name",
                text: "Peter de Carlo",
                start: 18948,
                end: 19930,
              },
              {
                entity_type: "occupation",
                text: "associate professor",
                start: 20292,
                end: 21194,
              },
              {
                entity_type: "organization",
                text: "Department of Environmental Health and Engineering",
                start: 21508,
                end: 23706,
              },
              {
                entity_type: "organization",
                text: "Johns Hopkins University Varsity",
                start: 23972,
                end: 25490,
              },
              {
                entity_type: "occupation",
                text: "professor",
                start: 26076,
                end: 26950,
              },
              { entity_type: "location", text: "the US", start: 45184, end: 45898 },
              {
                entity_type: "nationality",
                text: "Canadian",
                start: 49728,
                end: 50086,
              },
            ],
          summary: '- Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. In some places, the air quality warnings include the warning to stay inside.\n- Air pollution levels in Baltimore are considered unhealthy. Exposure to high levels can lead to a host of health problems. With climate change, we are seeing more wildfires. Will we be seeing more of these kinds of wide ranging air quality consequences?',
          speakers_expected: 2,
        }

    TopicDetectionModelResult:
      description: |
        The result of the Topic Detection model, if it is enabled.
        See [Topic Detection](https://www.assemblyai.com/docs/models/topic-detection) for more information.
      x-fern-sdk-group-name: transcripts
      type: object
      required:
        - status
        - results
        - summary
      properties:
        status:
          description: The status of the Topic Detection model. Either success, or unavailable in the rare case that the model failed.
          $ref: "#/components/schemas/AudioIntelligenceModelStatus"
        results:
          description: An array of results for the Topic Detection model
          type: array
          items:
            $ref: "#/components/schemas/TopicDetectionResult"
        summary:
          description: The overall relevance of topic to the entire audio file
          type: object
          additionalProperties:
            type: number
            format: double
            minimum: 0
            maximum: 1
      example:
        {
          status: "success",
          results:
            [
              {
                text: "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. And in some places, the air quality warnings include the warning to stay inside. We wanted to better understand what's happening here and why, so we called Peter de Carlo, an associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University Varsity. Good morning, professor. Good morning.",
                labels:
                  [
                    {
                      relevance: 0.988274097442627,
                      label: "Home&Garden>IndoorEnvironmentalQuality",
                    },
                    {
                      relevance: 0.5821335911750793,
                      label: "NewsAndPolitics>Weather",
                    },
                    {
                      relevance: 0.0042327106930315495,
                      label: "MedicalHealth>DiseasesAndConditions>LungAndRespiratoryHealth",
                    },
                    {
                      relevance: 0.0033971222583204508,
                      label: "NewsAndPolitics>Disasters",
                    },
                    {
                      relevance: 0.002469958271831274,
                      label: "BusinessAndFinance>Business>GreenSolutions",
                    },
                    {
                      relevance: 0.0014376690378412604,
                      label: "MedicalHealth>DiseasesAndConditions>Cancer",
                    },
                    {
                      relevance: 0.0014294233405962586,
                      label: "Science>Environment",
                    },
                    {
                      relevance: 0.001234519761055708,
                      label: "Travel>TravelLocations>PolarTravel",
                    },
                    {
                      relevance: 0.0010231725173071027,
                      label: "MedicalHealth>DiseasesAndConditions>ColdAndFlu",
                    },
                    {
                      relevance: 0.0007445293595083058,
                      label: "BusinessAndFinance>Industries>PowerAndEnergyIndustry",
                    },
                  ],
                timestamp: { start: 250, end: 28840 },
              },
            ],
          summary:
            {
              "NewsAndPolitics>Weather": 1.0,
              "Home&Garden>IndoorEnvironmentalQuality": 0.9043831825256348,
              "Science>Environment": 0.16117265820503235,
              "BusinessAndFinance>Industries>EnvironmentalServicesIndustry": 0.14393523335456848,
              "MedicalHealth>DiseasesAndConditions>LungAndRespiratoryHealth": 0.11401086300611496,
              "BusinessAndFinance>Business>GreenSolutions": 0.06348437070846558,
              "NewsAndPolitics>Disasters": 0.05041387677192688,
              "Travel>TravelLocations>PolarTravel": 0.01308488193899393,
              HealthyLiving: 0.008222488686442375,
              "MedicalHealth>DiseasesAndConditions>ColdAndFlu": 0.0022315620444715023,
              "MedicalHealth>DiseasesAndConditions>HeartAndCardiovascularDiseases": 0.00213034451007843,
              "HealthyLiving>Wellness>SmokingCessation": 0.001540527562610805,
              "MedicalHealth>DiseasesAndConditions>Injuries": 0.0013950627762824297,
              "BusinessAndFinance>Industries>PowerAndEnergyIndustry": 0.0012570273829624057,
              "MedicalHealth>DiseasesAndConditions>Cancer": 0.001097781932912767,
              "MedicalHealth>DiseasesAndConditions>Allergies": 0.0010148967849090695,
              "MedicalHealth>DiseasesAndConditions>MentalHealth": 0.000717321818228811,
              "Style&Fashion>PersonalCare>DeodorantAndAntiperspirant": 0.0006022014422342181,
              "Technology&Computing>Computing>ComputerNetworking": 0.0005461975233629346,
              "MedicalHealth>DiseasesAndConditions>Injuries>FirstAid": 0.0004885646631009877,
            },
        }

    ContentSafetyLabelsResult:
      description: |
        An array of results for the Content Moderation model, if it is enabled.
        See [Content moderation](https://www.assemblyai.com/docs/models/content-moderation) for more information.
      x-fern-sdk-group-name: transcripts
      type: object
      required:
        - status
        - results
        - summary
        - severity_score_summary
      properties:
        status:
          description: The status of the Content Moderation model. Either success, or unavailable in the rare case that the model failed.
          $ref: "#/components/schemas/AudioIntelligenceModelStatus"
        results:
          type: array
          items:
            $ref: "#/components/schemas/ContentSafetyLabelResult"
        summary:
          description: A summary of the Content Moderation confidence results for the entire audio file
          type: object
          additionalProperties:
            description: A confidence score for the presence of the sensitive topic "topic" across the entire audio file
            type: number
            format: double
            minimum: 0
            maximum: 1
        severity_score_summary:
          description: A summary of the Content Moderation severity results for the entire audio file
          type: object
          additionalProperties:
            $ref: "#/components/schemas/SeverityScoreSummary"
      example:
        {
          status: "success",
          results:
            [
              {
                text: "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. And in some places, the air quality warnings include the warning to stay inside. We wanted to better understand what's happening here and why, so we called Peter de Carlo, an associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University Varsity. Good morning, professor. Good morning.",
                labels:
                  [
                    {
                      label: "disasters",
                      confidence: 0.8142836093902588,
                      severity: 0.4093044400215149,
                    },
                  ],
                sentences_idx_start: 0,
                sentences_idx_end: 5,
                timestamp: { start: 250, end: 28840 },
              },
            ],
          summary:
            { disasters: 0.9940800441842205, health_issues: 0.9216489289040967 },
          severity_score_summary:
            {
              disasters:
                { low: 0.5733263024656846, medium: 0.42667369753431533, high: 0.0 },
              health_issues:
                {
                  low: 0.22863814977924785,
                  medium: 0.45014154926938227,
                  high: 0.32122030095136983,
                },
            },
        }

    Chapter:
      description: Chapter of the audio file
      x-fern-sdk-group-name: transcripts
      type: object
      additionalProperties: false
      required:
        - gist
        - headline
        - summary
        - start
        - end
      properties:
        gist:
          description: An ultra-short summary (just a few words) of the content spoken in the chapter
          type: string
        headline:
          description: A single sentence summary of the content spoken during the chapter
          type: string
        summary:
          description: A one paragraph summary of the content spoken during the chapter
          type: string
        start:
          description: The starting time, in milliseconds, for the chapter
          type: integer
        end:
          description: The starting time, in milliseconds, for the chapter
          type: integer
      example:
        {
          summary: "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. In some places, the air quality warnings include the warning to stay inside.",
          gist: "Smoggy air quality alerts across US",
          headline: "Smoke from hundreds of wildfires in Canada is triggering air quality alerts across US",
          start: 250,
          end: 28840,
        }

    Entity:
      description: A detected entity
      x-fern-sdk-group-name: transcripts
      type: object
      additionalProperties: false
      required:
        - entity_type
        - text
        - start
        - end
      properties:
        entity_type:
          description: The type of entity for the detected entity
          $ref: "#/components/schemas/EntityType"
        text:
          description: The text for the detected entity
          type: string
        start:
          description: The starting time, in milliseconds, at which the detected entity appears in the audio file
          type: integer
        end:
          description: The ending time, in milliseconds, for the detected entity in the audio file
          type: integer
      example:
        { entity_type: "location", text: "Canada", start: 2548, end: 3130 }

    EntityType:
      description: The type of entity for the detected entity
      x-fern-sdk-group-name: transcripts
      type: string
      enum:
        - banking_information
        - blood_type
        - credit_card_cvv
        - credit_card_expiration
        - credit_card_number
        - date
        - date_of_birth
        - drivers_license
        - drug
        - email_address
        - event
        - injury
        - language
        - location
        - medical_condition
        - medical_process
        - money_amount
        - nationality
        - occupation
        - organization
        - password
        - person_age
        - person_name
        - phone_number
        - political_affiliation
        - religion
        - time
        - url
        - us_social_security_number
      x-fern-enum:
        banking_information:
          description: Banking information, including account and routing numbers
        blood_type:
          description: Blood type (e.g., O-, AB positive)
        credit_card_cvv:
          description: |
            Credit card verification code (e.g., CVV: 080)
        credit_card_expiration:
          description: Expiration date of a credit card
        credit_card_number:
          description: Credit card number
        date:
          description: Specific calendar date (e.g., December 18)
        date_of_birth:
          description: |
            Date of Birth (e.g., Date of Birth: March 7, 1961)
        drivers_license:
          description: |
            Driver's license number (e.g., DL #356933-540)
        drug:
          description: Medications, vitamins, or supplements (e.g., Advil, Acetaminophen, Panadol)
        email_address:
          description: Email address (e.g., support@assemblyai.com)
        event:
          description: Name of an event or holiday (e.g., Olympics, Yom Kippur)
        injury:
          description: Bodily injury (e.g., I broke my arm, I have a sprained wrist)
        language:
          description: Name of a natural language (e.g., Spanish, French)
        location:
          description: Any location reference including mailing address, postal code, city, state, province, or country
        medical_condition:
          description: Name of a medical condition, disease, syndrome, deficit, or disorder (e.g., chronic fatigue syndrome, arrhythmia, depression)
        medical_process:
          description: Medical process, including treatments, procedures, and tests (e.g., heart surgery, CT scan)
        money_amount:
          description: Name and/or amount of currency (e.g., 15 pesos, $94.50)
        nationality:
          description: Terms indicating nationality, ethnicity, or race (e.g., American, Asian, Caucasian)
        occupation:
          description: Job title or profession (e.g., professor, actors, engineer, CPA)
        organization:
          description: Name of an organization (e.g., CNN, McDonalds, University of Alaska)
        password:
          description: Account passwords, PINs, access keys, or verification answers (e.g., 27%alfalfa, temp1234, My mother's maiden name is Smith)
        person_age:
          description: Number associated with an age (e.g., 27, 75)
        person_name:
          description: Name of a person (e.g., Bob, Doug Jones)
        phone_number:
          description: Telephone or fax number
        political_affiliation:
          description: Terms referring to a political party, movement, or ideology (e.g., Republican, Liberal)
        religion:
          description: Terms indicating religious affiliation (e.g., Hindu, Catholic)
        time:
          description: Expressions indicating clock times (e.g., 19:37:28, 10pm EST)
        url:
          description: Internet addresses (e.g., www.assemblyai.com)
        us_social_security_number:
          description: Social Security Number or equivalent

    SentimentAnalysisResult:
      description: The result of the sentiment analysis model
      x-fern-sdk-group-name: transcripts
      type: object
      additionalProperties: false
      required:
        - text
        - start
        - end
        - sentiment
        - confidence
      properties:
        text:
          description: The transcript of the sentence
          type: string
        start:
          description: The starting time, in milliseconds, of the sentence
          type: integer
        end:
          description: The ending time, in milliseconds, of the sentence
          type: integer
        sentiment:
          description: The detected sentiment for the sentence, one of POSITIVE, NEUTRAL, NEGATIVE
          $ref: "#/components/schemas/Sentiment"
        confidence:
          description: The confidence score for the detected sentiment of the sentence, from 0 to 1
          type: number
          format: double
          minimum: 0
          maximum: 1
        speaker:
          description: The speaker of the sentence if [Speaker Diarization](https://www.assemblyai.com/docs/models/speaker-diarization) is enabled, else null
          type: [string, "null"]
      example:
        {
          text: "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US.",
          start: 250,
          end: 6350,
          sentiment: "NEGATIVE",
          confidence: 0.8181032538414001,
          speaker: null,
        }

    Sentiment:
      x-fern-sdk-group-name: transcripts
      enum:
        - POSITIVE
        - NEUTRAL
        - NEGATIVE

    TopicDetectionResult:
      description: The result of the topic detection model
      x-fern-sdk-group-name: transcripts
      type: object
      additionalProperties: false
      required:
        - text
      properties:
        text:
          description: The text in the transcript in which a detected topic occurs
          type: string
        labels:
          type: array
          items:
            type: object
            additionalProperties: false
            required:
              - relevance
              - label
            properties:
              relevance:
                description: How relevant the detected topic is of a detected topic
                type: number
                format: double
                minimum: 0
                maximum: 1
              label:
                description: The IAB taxonomical label for the label of the detected topic, where > denotes supertopic/subtopic relationship
                type: string
        timestamp:
          $ref: "#/components/schemas/Timestamp"
      example:
        {
          text: "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. And in some places, the air quality warnings include the warning to stay inside. We wanted to better understand what's happening here and why, so we called Peter de Carlo, an associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University Varsity. Good morning, professor. Good morning.",
          labels:
            [
              {
                relevance: 0.988274097442627,
                label: "Home&Garden>IndoorEnvironmentalQuality",
              },
              { relevance: 0.5821335911750793, label: "NewsAndPolitics>Weather" },
              {
                relevance: 0.0042327106930315495,
                label: "MedicalHealth>DiseasesAndConditions>LungAndRespiratoryHealth",
              },
              {
                relevance: 0.0033971222583204508,
                label: "NewsAndPolitics>Disasters",
              },
              {
                relevance: 0.002469958271831274,
                label: "BusinessAndFinance>Business>GreenSolutions",
              },
              {
                relevance: 0.0014376690378412604,
                label: "MedicalHealth>DiseasesAndConditions>Cancer",
              },
              { relevance: 0.0014294233405962586, label: "Science>Environment" },
              {
                relevance: 0.001234519761055708,
                label: "Travel>TravelLocations>PolarTravel",
              },
              {
                relevance: 0.0010231725173071027,
                label: "MedicalHealth>DiseasesAndConditions>ColdAndFlu",
              },
              {
                relevance: 0.0007445293595083058,
                label: "BusinessAndFinance>Industries>PowerAndEnergyIndustry",
              },
            ],
          timestamp: { start: 250, end: 28840 },
        }

    ContentSafetyLabel:
      type: object
      x-fern-sdk-group-name: transcripts
      additionalProperties: false
      required:
        - label
        - confidence
        - severity
      properties:
        label:
          description: The label of the sensitive topic
          type: string
        confidence:
          description: The confidence score for the topic being discussed, from 0 to 1
          type: number
          format: double
          minimum: 0
          maximum: 1
        severity:
          description: How severely the topic is discussed in the section, from 0 to 1
          type: number
          format: double
          minimum: 0
          maximum: 1
      example:
        {
          label: "disasters",
          confidence: 0.8142836093902588,
          severity: 0.4093044400215149,
        }

    ContentSafetyLabelResult:
      type: object
      x-fern-sdk-group-name: transcripts
      additionalProperties: false
      required:
        - text
        - labels
        - sentences_idx_start
        - sentences_idx_end
        - timestamp
      properties:
        text:
          description: The transcript of the section flagged by the Content Moderation model
          type: string
        labels:
          description: An array of safety labels, one per sensitive topic that was detected in the section
          type: array
          items:
            $ref: "#/components/schemas/ContentSafetyLabel"
        sentences_idx_start:
          description: The sentence index at which the section begins
          type: integer
        sentences_idx_end:
          description: The sentence index at which the section ends
          type: integer
        timestamp:
          description: Timestamp information for the section
          $ref: "#/components/schemas/Timestamp"
      example:
        {
          text: "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. And in some places, the air quality warnings include the warning to stay inside. We wanted to better understand what's happening here and why, so we called Peter de Carlo, an associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University Varsity. Good morning, professor. Good morning.",
          labels:
            [
              {
                label: "disasters",
                confidence: 0.8142836093902588,
                severity: 0.4093044400215149,
              },
            ],
          sentences_idx_start: 0,
          sentences_idx_end: 5,
          timestamp: { start: 250, end: 28840 },
        }

    SeverityScoreSummary:
      type: object
      x-fern-sdk-group-name: transcripts
      required:
        - low
        - medium
        - high
      properties:
        low:
          type: number
          format: double
          minimum: 0
          maximum: 1
        medium:
          type: number
          format: double
          minimum: 0
          maximum: 1
        high:
          type: number
          format: double
          minimum: 0
          maximum: 1
      example:
        { low: 0.5733263024656846, medium: 0.42667369753431533, high: 0.0 }

    AutoHighlightsResult:
      description: |
        An array of results for the Key Phrases model, if it is enabled.
        See [Key phrases](https://www.assemblyai.com/docs/models/key-phrases) for more information.
      x-fern-sdk-group-name: transcripts
      type: object
      required:
        - results
      properties:
        results:
          description: A temporally-sequential array of Key Phrases
          type: array
          items:
            $ref: "#/components/schemas/AutoHighlightResult"
      example:
        {
          status: "success",
          results:
            [
              {
                count: 1,
                rank: 0.08,
                text: "air quality alerts",
                timestamps: [{ start: 3978, end: 5114 }],
              },
              {
                count: 1,
                rank: 0.08,
                text: "wide ranging air quality consequences",
                timestamps: [{ start: 235388, end: 238694 }],
              },
              {
                count: 1,
                rank: 0.07,
                text: "more wildfires",
                timestamps: [{ start: 230972, end: 232354 }],
              },
              {
                count: 1,
                rank: 0.07,
                text: "air pollution",
                timestamps: [{ start: 156004, end: 156910 }],
              },
              {
                count: 3,
                rank: 0.07,
                text: "weather systems",
                timestamps:
                  [
                    { start: 47344, end: 47958 },
                    { start: 205268, end: 205818 },
                    { start: 211588, end: 213434 },
                  ],
              },
              {
                count: 2,
                rank: 0.06,
                text: "high levels",
                timestamps:
                  [{ start: 121128, end: 121646 }, { start: 155412, end: 155866 }],
              },
              {
                count: 1,
                rank: 0.06,
                text: "health conditions",
                timestamps: [{ start: 152138, end: 152666 }],
              },
              {
                count: 2,
                rank: 0.06,
                text: "Peter de Carlo",
                timestamps:
                  [{ start: 18948, end: 19930 }, { start: 268298, end: 269194 }],
              },
              {
                count: 1,
                rank: 0.06,
                text: "New York City",
                timestamps: [{ start: 125768, end: 126274 }],
              },
              {
                count: 1,
                rank: 0.05,
                text: "respiratory conditions",
                timestamps: [{ start: 152964, end: 153786 }],
              },
              {
                count: 3,
                rank: 0.05,
                text: "New York",
                timestamps:
                  [
                    { start: 125768, end: 126034 },
                    { start: 171448, end: 171938 },
                    { start: 176008, end: 176322 },
                  ],
              },
              {
                count: 3,
                rank: 0.05,
                text: "climate change",
                timestamps:
                  [
                    { start: 229548, end: 230230 },
                    { start: 244576, end: 245162 },
                    { start: 263348, end: 263950 },
                  ],
              },
              {
                count: 1,
                rank: 0.05,
                text: "Johns Hopkins University Varsity",
                timestamps: [{ start: 23972, end: 25490 }],
              },
              {
                count: 1,
                rank: 0.05,
                text: "heart conditions",
                timestamps: [{ start: 153988, end: 154506 }],
              },
              {
                count: 1,
                rank: 0.05,
                text: "air quality warnings",
                timestamps: [{ start: 12308, end: 13434 }],
              },
            ],
        }

    AutoHighlightResult:
      type: object
      x-fern-sdk-group-name: transcripts
      additionalProperties: false
      required:
        - count
        - rank
        - text
        - timestamps
      properties:
        count:
          description: The total number of times the key phrase appears in the audio file
          type: integer
        rank:
          description: The total relevancy to the overall audio file of this key phrase - a greater number means more relevant
          type: number
          format: float
          minimum: 0
          maximum: 1
        text:
          description: The text itself of the key phrase
          type: string
        timestamps:
          description: The timestamp of the of the key phrase
          type: array
          items:
            $ref: "#/components/schemas/Timestamp"
      example:
        {
          count: 1,
          rank: 0.08,
          text: "air quality alerts",
          timestamps: [{ start: 3978, end: 5114 }],
        }

    TranscriptWord:
      type: object
      x-fern-sdk-group-name: transcripts
      additionalProperties: false
      required:
        - confidence
        - start
        - end
        - text
      properties:
        confidence:
          type: number
          format: double
          minimum: 0
          maximum: 1
        start:
          type: integer
        end:
          type: integer
        text:
          type: string
        speaker:
          description: The speaker of the sentence if [Speaker Diarization](https://www.assemblyai.com/docs/models/speaker-diarization) is enabled, else null
          type: [string, "null"]
      example:
        { text: "Smoke", start: 250, end: 650, confidence: 0.97465, speaker: null }

    TranscriptSentence:
      type: object
      x-fern-sdk-group-name: transcripts
      additionalProperties: false
      required:
        - text
        - start
        - end
        - confidence
        - words
      properties:
        text:
          type: string
        start:
          type: integer
        end:
          type: integer
        confidence:
          type: number
          format: double
          minimum: 0
          maximum: 1
        words:
          type: array
          items:
            $ref: "#/components/schemas/TranscriptWord"
        speaker:
          description: The speaker of the sentence if [Speaker Diarization](https://www.assemblyai.com/docs/models/speaker-diarization) is enabled, else null
          type: [string, "null"]
      example:
        {
          text: "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US.",
          start: 250,
          end: 6350,
          confidence: 0.72412,
          words:
            [
              {
                text: "Smoke",
                start: 250,
                end: 650,
                confidence: 0.72412,
                speaker: null,
              },
              {
                text: "from",
                start: 730,
                end: 1022,
                confidence: 0.99996,
                speaker: null,
              },
              {
                text: "hundreds",
                start: 1076,
                end: 1466,
                confidence: 0.99992,
                speaker: null,
              },
              { text: "of", start: 1498, end: 1646, confidence: 1, speaker: null },
            ],
          speaker: null,
        }

    SentencesResponse:
      type: object
      x-fern-sdk-group-name: transcripts
      additionalProperties: false
      required:
        - id
        - confidence
        - audio_duration
        - sentences
      properties:
        id:
          type: string
          format: uuid
        confidence:
          type: number
          format: double
          minimum: 0
          maximum: 1
        audio_duration:
          type: number
        sentences:
          type: array
          items:
            $ref: "#/components/schemas/TranscriptSentence"
      example:
        {
          sentences:
            [
              {
                text: "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US.",
                start: 250,
                end: 6350,
                confidence: 0.72412,
                words:
                  [
                    {
                      text: "Smoke",
                      start: 250,
                      end: 650,
                      confidence: 0.72412,
                      speaker: null,
                    },
                    {
                      text: "from",
                      start: 730,
                      end: 1022,
                      confidence: 0.99996,
                      speaker: null,
                    },
                    {
                      text: "hundreds",
                      start: 1076,
                      end: 1466,
                      confidence: 0.99992,
                      speaker: null,
                    },
                    {
                      text: "of",
                      start: 1498,
                      end: 1646,
                      confidence: 1,
                      speaker: null,
                    },
                  ],
                speaker: null,
              },
              {
                text: "Skylines from Maine to Maryland to Minnesota are gray and smoggy.",
                start: 6500,
                end: 11050,
                confidence: 0.99819,
                words:
                  [
                    {
                      text: "Skylines",
                      start: 6500,
                      end: 7306,
                      confidence: 0.99819,
                      speaker: null,
                    },
                    {
                      text: "from",
                      start: 7338,
                      end: 7534,
                      confidence: 0.99987,
                      speaker: null,
                    },
                    {
                      text: "Maine",
                      start: 7572,
                      end: 7962,
                      confidence: 0.9972,
                      speaker: null,
                    },
                    {
                      text: "to",
                      start: 8026,
                      end: 8206,
                      confidence: 1,
                      speaker: null,
                    },
                    {
                      text: "Maryland",
                      start: 8228,
                      end: 8650,
                      confidence: 0.5192,
                      speaker: null,
                    },
                    {
                      text: "to",
                      start: 8730,
                      end: 8926,
                      confidence: 1,
                      speaker: null,
                    },
                  ],
                speaker: null,
              },
            ],
          id: "d5a3d302-066e-43fb-b63b-8f57baf185db",
          confidence: 0.9579390654205628,
          audio_duration: 281,
        }

    TranscriptParagraph:
      type: object
      x-fern-sdk-group-name: transcripts
      additionalProperties: false
      required:
        - text
        - start
        - end
        - confidence
        - words
      properties:
        text:
          type: string
        start:
          type: integer
        end:
          type: integer
        confidence:
          type: number
          format: double
          minimum: 0
          maximum: 1
        words:
          type: array
          items:
            $ref: "#/components/schemas/TranscriptWord"
        speaker:
          description: The speaker of the sentence if [Speaker Diarization](https://www.assemblyai.com/docs/models/speaker-diarization) is enabled, else null
          type: [string, "null"]
      example:
        {
          text: "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. And in some places, the air quality warnings include the warning to stay inside. We wanted to better understand what's happening here and why, so we called Peter Decarlo, an associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University. Good morning, professor.",
          start: 250,
          end: 26950,
          confidence: 0.73033,
          words:
            [
              {
                text: "Smoke",
                start: 250,
                end: 650,
                confidence: 0.73033,
                speaker: null,
              },
              { text: "from", start: 730, end: 1022, confidence: 1, speaker: null },
              {
                text: "hundreds",
                start: 1076,
                end: 1466,
                confidence: 0.99992,
                speaker: null,
              },
              { text: "of", start: 1498, end: 1646, confidence: 1, speaker: null },
            ],
        }

    ParagraphsResponse:
      type: object
      x-fern-sdk-group-name: transcripts
      additionalProperties: false
      required:
        - id
        - confidence
        - audio_duration
        - paragraphs
      properties:
        id:
          type: string
          format: uuid
        confidence:
          type: number
          format: double
          minimum: 0
          maximum: 1
        audio_duration:
          type: number
        paragraphs:
          type: array
          items:
            $ref: "#/components/schemas/TranscriptParagraph"
      example:
        {
          paragraphs:
            [
              {
                text: "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. And in some places, the air quality warnings include the warning to stay inside. We wanted to better understand what's happening here and why, so we called Peter Decarlo, an associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University. Good morning, professor.",
                start: 250,
                end: 26950,
                confidence: 0.73033,
                words:
                  [
                    {
                      text: "Smoke",
                      start: 250,
                      end: 650,
                      confidence: 0.73033,
                      speaker: null,
                    },
                    {
                      text: "from",
                      start: 730,
                      end: 1022,
                      confidence: 1,
                      speaker: null,
                    },
                    {
                      text: "hundreds",
                      start: 1076,
                      end: 1466,
                      confidence: 0.99992,
                      speaker: null,
                    },
                    {
                      text: "of",
                      start: 1498,
                      end: 1646,
                      confidence: 1,
                      speaker: null,
                    },
                  ],
              },
              {
                text: "Good morning. So what is it about the conditions right now that have caused this round of wildfires to affect so many people so far away? Well, there's a couple of things. The season has been pretty dry already, and then the fact that we're getting hit in the US. Is because there's a couple of weather systems that are essentially channeling the smoke from those Canadian wildfires through Pennsylvania into the Mid Atlantic and the Northeast and kind of just dropping the smoke there.",
                start: 27850,
                end: 56190,
                confidence: 0.99667,
                words:
                  [
                    {
                      text: "Good",
                      start: 27850,
                      end: 28262,
                      confidence: 0.99667,
                      speaker: null,
                    },
                    {
                      text: "morning.",
                      start: 28316,
                      end: 28920,
                      confidence: 0.99742,
                      speaker: null,
                    },
                    {
                      text: "So",
                      start: 29290,
                      end: 29702,
                      confidence: 0.94736,
                      speaker: null,
                    },
                  ],
              },
            ],
          id: "d5a3d302-066e-43fb-b63b-8f57baf185db",
          confidence: 0.9578730257009361,
          audio_duration: 281,
        }

    PageDetails:
      type: object
      x-fern-sdk-group-name: transcripts
      additionalProperties: false
      required:
        - limit
        - result_count
        - current_url
        - prev_url
      properties:
        limit:
          type: integer
        result_count:
          type: integer
        current_url:
          type: string
        prev_url:
          type: string
        next_url:
          type: [string, "null"]
      example:
        {
          limit: 10,
          result_count: 10,
          current_url: "https://api.assemblyai.com/v2/transcript?limit=10",
          prev_url: "https://api.assemblyai.com/v2/transcript?limit=10&before_id=62npeahu2b-a8ea-4112-854c-69542c20d90c",
          next_url: "https://api.assemblyai.com/v2/transcript?limit=10&after_id=62nfw3mlar-01ad-4631-92f6-629929496eed",
        }

    ListTranscriptParams:
      type: object
      x-fern-sdk-group-name: transcripts
      # Don't use this type in Fern SDKs as it is already generated from the endpoint parameters
      x-fern-ignore: true
      additionalProperties: false
      properties:
        limit:
          description: Maximum amount of transcripts to retrieve
          type: integer
          format: int64
          minimum: 1
          maximum: 200
          default: 10
        status:
          description: Filter by transcript status
          $ref: "#/components/schemas/TranscriptStatus"
        created_on:
          description: Only get transcripts created on this date
          type: string
          format: date
        before_id:
          description: Get transcripts that were created before this transcript ID
          type: string
          format: uuid
        after_id:
          description: Get transcripts that were created after this transcript ID
          type: string
          format: uuid
        throttled_only:
          description: Only get throttled transcripts, overrides the status filter
          type: boolean
      example:
        {
          after_id: "a7c5cafd-2c2e-4bdd-b0b2-69dade2f7a1b",
          before_id: "9ea68fd3-f953-42c1-9742-976c447fb463",
          created_on: "2023-11-03",
          limit: 2,
          status: "completed",
          throttled_only: false,
        }

    TranscriptListItem:
      type: object
      x-fern-sdk-group-name: transcripts
      additionalProperties: false
      required:
        - id
        - resource_url
        - status
        - created
        - audio_url
      properties:
        id:
          type: string
          format: uuid
        resource_url:
          type: string
        status:
          $ref: "#/components/schemas/TranscriptStatus"
        created:
          type: string
          pattern: '^(?:(\d{4}-\d{2}-\d{2})T(\d{2}:\d{2}:\d{2}(?:\.\d+)?))$'
          x-fern-type: datetime
        completed:
          type: [string, "null"]
          pattern: '^(?:(\d{4}-\d{2}-\d{2})T(\d{2}:\d{2}:\d{2}(?:\.\d+)?))$'
          x-fern-type: datetime
        audio_url:
          type: string
      example:
        {
          id: "9ea68fd3-f953-42c1-9742-976c447fb463",
          resource_url: "https://api.assemblyai.com/v2/transcript/9ea68fd3-f953-42c1-9742-976c447fb463",
          status: "completed",
          created: "2023-11-02T21:49:25.586965",
          completed: "2023-11-02T21:49:25.586965",
          audio_url: "https://github.com/AssemblyAI-Examples/audio-examples/raw/main/20230607_me_canadian_wildfires.mp3",
        }

    TranscriptList:
      type: object
      x-fern-sdk-group-name: transcripts
      additionalProperties: false
      required:
        - page_details
        - transcripts
      properties:
        page_details:
          $ref: "#/components/schemas/PageDetails"
        transcripts:
          type: array
          items:
            $ref: "#/components/schemas/TranscriptListItem"
      example:
        {
          page_details:
            {
              limit: 2,
              result_count: 2,
              current_url: "https://api.assemblyai.com/v2/transcript?limit=2",
              prev_url: "https://api.assemblyai.com/v2/transcript?limit=2&before_id=62npeahu2b-a8ea-4112-854c-69542c20d90c",
              next_url: "https://api.assemblyai.com/v2/transcript?limit=2&after_id=62nfw3mlar-01ad-4631-92f6-629929496eed",
            },
          transcripts:
            [
              {
                id: "9ea68fd3-f953-42c1-9742-976c447fb463",
                resource_url: "https://api.assemblyai.com/v2/transcript/9ea68fd3-f953-42c1-9742-976c447fb463",
                status: "completed",
                created: "2023-11-02T21:49:25.586965",
                completed: "2023-11-02T21:49:25.586965",
                audio_url: "https://github.com/AssemblyAI-Examples/audio-examples/raw/main/20230607_me_canadian_wildfires.mp3",
              },
              {
                id: "d5a3d302-066e-43fb-b63b-8f57baf185db",
                resource_url: "https://api.assemblyai.com/v2/transcript/d5a3d302-066e-43fb-b63b-8f57baf185db",
                status: "completed",
                created: "2023-11-02T21:49:25.586965",
                completed: "2023-11-02T21:49:25.586965",
                audio_url: "http://deleted_by_user",
              },
            ],
        }

    UploadedFile:
      type: object
      x-fern-sdk-group-name: files
      additionalProperties: false
      required:
        - upload_url
      properties:
        upload_url:
          description: A URL that points to your audio file, accessible only by AssemblyAI's servers
          type: string
      example:
        {
          upload_url: "https://cdn.assemblyai.com/upload/f756988d-47e2-4ca3-96ce-04bb168f8f2a",
        }

    CreateRealtimeTemporaryTokenParams:
      type: object
      x-fern-sdk-group-name: realtime
      additionalProperties: false
      properties:
        expires_in:
          description: The amount of time until the token expires in seconds
          type: integer
          minimum: 60
      required: [expires_in]
      example:
        { expires_in: 480 }

    RealtimeTemporaryTokenResponse:
      type: object
      x-fern-sdk-group-name: realtime
      additionalProperties: false
      required:
        - token
      properties:
        token:
          description: The temporary authentication token for real-time transcription
          type: string
      example:
        {
          token: "fe4145dd1e7a2e149488dcd2d553a8018a89833fc5084837d66fd1bcf5a105d4",
        }

    AudioIntelligenceModelStatus:
      x-fern-sdk-group-name: transcripts
      type: string
      description: Either success, or unavailable in the rare case that the model failed
      enum:
        - success
        - unavailable

    PurgeLemurRequestDataResponse:
      x-fern-sdk-group-name: lemur
      type: object
      additionalProperties: false
      properties:
        request_id:
          type: string
          format: uuid
          description: The ID of the deletion request of the LeMUR request
        request_id_to_purge:
          type: string
          format: uuid
          description: The ID of the LeMUR request to purge the data for
        deleted:
          type: boolean
          description: Whether the request data was deleted
      required:
        - request_id
        - request_id_to_purge
        - deleted
      example:
        {
          request_id: "914fe7e4-f10a-4364-8946-34614c2873f6",
          request_id_to_purge: "b7eb03ec-1650-4181-949b-75d9de317de1",
          deleted: true,
        }

    # This is to have a type that can be used to get the ID so it can be deleted
    LemurBaseResponse:
      x-fern-sdk-group-name: lemur
      type: object
      additionalProperties: false
      properties:
        request_id:
          description: The ID of the LeMUR request
          type: string
          format: uuid
      required: [request_id]
      example:
        { request_id: "5e1b27c2-691f-4414-8bc5-f14678442f9e" }

    LemurSummaryResponse:
      x-fern-sdk-group-name: lemur
      allOf:
        - $ref: "#/components/schemas/LemurBaseResponse"
        - type: object
          additionalProperties: false
          properties:
            response:
              description: The response generated by LeMUR
              type: string
          required: [response]
      example:
        request_id: "5e1b27c2-691f-4414-8bc5-f14678442f9e"
        response: |
          - Wildfires in Canada are sending smoke and air pollution across parts of the US, triggering air quality alerts from Maine to Minnesota. Concentrations of particulate matter have exceeded safety levels.

          - Weather systems are channeling the smoke through Pennsylvania into the Mid-Atlantic and Northeast regions. New York City has canceled outdoor activities to keep children and vulnerable groups indoors.

          - Very small particulate matter can enter the lungs and impact respiratory, cardiovascular and neurological health. Young children, the elderly and those with preexisting conditions are most at risk.

          - The conditions causing the poor air quality could get worse or shift to different areas in coming days depending on weather patterns. More wildfires may also contribute to higher concentrations.

          - Climate change is leading to longer and more severe fire seasons. Events of smoke traveling long distances and affecting air quality over wide areas will likely become more common in the future."

    LemurQuestionAnswerResponse:
      x-fern-sdk-group-name: lemur
      allOf:
        - $ref: "#/components/schemas/LemurBaseResponse"
        - type: object
          additionalProperties: false
          properties:
            response:
              description: The answers generated by LeMUR and their questions
              type: array
              items:
                $ref: "#/components/schemas/LemurQuestionAnswer"
          required: [response]
      example:
        {
          request_id: "5e1b27c2-691f-4414-8bc5-f14678442f9e",
          response:
            [
              { answer: "CA, US", question: "Where are there wildfires?" },
              { answer: "yes", question: "Is global warming affecting wildfires?" },
            ],
        }

    LemurQuestionAnswer:
      x-fern-sdk-group-name: lemur
      type: object
      description: An answer generated by LeMUR and its question
      additionalProperties: false
      properties:
        question:
          description: The question for LeMUR to answer
          type: string
        answer:
          description: The answer generated by LeMUR
          type: string
      required: [question, answer]
      example:
        { answer: "CA, US", question: "Where are there wildfires?" }

    LemurActionItemsResponse:
      x-fern-sdk-group-name: lemur
      allOf:
        - $ref: "#/components/schemas/LemurBaseResponse"
        - type: object
          additionalProperties: false
          properties:
            response:
              description: The response generated by LeMUR
              type: string
          required: [response]
      example:
        request_id: "5e1b27c2-691f-4414-8bc5-f14678442f9e"
        response: |
          Here are some potential action items based on the transcript:

          - Monitor air quality levels in affected areas and issue warnings as needed.

          - Advise vulnerable populations like children, the elderly, and those with respiratory conditions to limit time outdoors.

          - Have schools cancel outdoor activities when air quality is poor.

          - Educate the public on health impacts of smoke inhalation and precautions to take.

          - Track progression of smoke plumes using weather and air quality monitoring systems.

          - Coordinate cross-regionally to manage smoke exposure as air masses shift.

          - Plan for likely increase in such events due to climate change. Expand monitoring and forecasting capabilities.

          - Conduct research to better understand health impacts of wildfire smoke and mitigation strategies.

          - Develop strategies to prevent and manage wildfires to limit air quality impacts.

    LemurTaskResponse:
      x-fern-sdk-group-name: lemur
      allOf:
        - $ref: "#/components/schemas/LemurBaseResponse"
        - type: object
          additionalProperties: false
          properties:
            response:
              description: The response generated by LeMUR.
              type: string
          required: [response]
      example:
        request_id: "5e1b27c2-691f-4414-8bc5-f14678442f9e"
        response: |
          Based on the transcript, the following locations were mentioned as being affected by wildfire smoke from Canada:

          - Maine
          - Maryland
          - Minnesota
          - Mid Atlantic region
          - Northeast region
          - New York City
          - Baltimore

    LemurBaseParams:
      x-fern-sdk-group-name: lemur
      type: object
      additionalProperties: false
      properties:
        transcript_ids:
          description: |
            A list of completed transcripts with text. Up to a maximum of 100 files or 100 hours, whichever is lower.
            Use either transcript_ids or input_text as input into LeMUR.
          type: array
          items:
            type: string
        input_text:
          description: |
            Custom formatted transcript data. Maximum size is the context limit of the selected model, which defaults to 100000.
            Use either transcript_ids or input_text as input into LeMUR.
          type: string
        context:
          description: Context to provide the model. This can be a string or a free-form JSON value.
          oneOf:
            - type: string
            - type: object
              additionalProperties: true
        final_model:
          description: |
            The model that is used for the final prompt after compression is performed.
            Defaults to "default".
          default: "default"
          anyOf:
            - $ref: "#/components/schemas/LemurModel"
            - type: string
        max_output_size:
          description: Max output size in tokens, up to 4000
          type: integer
        temperature:
          description: |
            The temperature to use for the model.
            Higher values result in answers that are more creative, lower values are more conservative.
            Can be any value between 0.0 and 1.0 inclusive.
          type: number
          format: float
          minimum: 0
          maximum: 1
      example:
        {
          transcript_ids: ["64nygnr62k-405c-4ae8-8a6b-d90b40ff3cce"],
          context: "This is an interview about wildfires.",
          final_model: "default",
          temperature: 0,
          max_output_size: 3000,
        }

    LemurTaskParams:
      x-fern-sdk-group-name: lemur
      allOf:
        - $ref: "#/components/schemas/LemurBaseParams"
        - type: object
          additionalProperties: false
          properties:
            prompt:
              description: Your text to prompt the model to produce a desired output, including any context you want to pass into the model.
              type: string
          required: [prompt]
      example:
        {
          transcript_ids: ["64nygnr62k-405c-4ae8-8a6b-d90b40ff3cce"],
          prompt: "List all the locations affected by wildfires.",
          context: "This is an interview about wildfires.",
          final_model: "default",
          temperature: 0,
          max_output_size: 3000,
        }

    LemurSummaryParams:
      x-fern-sdk-group-name: lemur
      allOf:
        - $ref: "#/components/schemas/LemurBaseParams"
        - type: object
          additionalProperties: false
          properties:
            answer_format:
              description: |
                How you want the summary to be returned. This can be any text. Examples: "TLDR", "bullet points"
              type: string
      example:
        {
          transcript_ids: ["64nygnr62k-405c-4ae8-8a6b-d90b40ff3cce"],
          context: "This is an interview about wildfires.",
          final_model: "default",
          temperature: 0,
          max_output_size: 3000,
        }

    LemurQuestionAnswerParams:
      x-fern-sdk-group-name: lemur
      allOf:
        - $ref: "#/components/schemas/LemurBaseParams"
        - type: object
          additionalProperties: false
          properties:
            questions:
              description: A list of questions to ask
              type: array
              items:
                $ref: "#/components/schemas/LemurQuestion"
          required: [questions]
      example:
        {
          transcript_ids: ["64nygnr62k-405c-4ae8-8a6b-d90b40ff3cce"],
          context: "This is an interview about wildfires.",
          questions:
            [
              {
                question: "Where are there wildfires?",
                answer_format: "List of countries in ISO 3166-1 alpha-2 format",
                answer_options: ["US", "CA"],
              },
              {
                question: "Is global warming affecting wildfires?",
                answer_options: ["yes", "no"],
              },
            ],
          final_model: "default",
          temperature: 0,
          max_output_size: 3000,
        }

    LemurQuestion:
      x-fern-sdk-group-name: lemur
      type: object
      additionalProperties: false
      required: [question]
      properties:
        question:
          description: The question you wish to ask. For more complex questions use default model.
          type: string
        context:
          description: Any context about the transcripts you wish to provide. This can be a string or any object.
          oneOf:
            - type: string
            - type: object
              additionalProperties: true
        answer_format:
          description: |
            How you want the answer to be returned. This can be any text. Can't be used with answer_options. Examples: "short sentence", "bullet points"
          type: string
        answer_options:
          description: |
            What discrete options to return. Useful for precise responses. Can't be used with answer_format. Example: ["Yes", "No"]
          type: array
          items:
            type: string
      example:
        {
          question: "Where are there wildfires?",
          answer_format: "List of countries in ISO 3166-1 alpha-2 format",
        }

    LemurActionItemsParams:
      x-fern-sdk-group-name: lemur
      allOf:
        - $ref: "#/components/schemas/LemurBaseParams"
        - type: object
          additionalProperties: false
          properties:
            answer_format:
              description: |
                How you want the action items to be returned. This can be any text.
                Defaults to "Bullet Points".
              type: string
              default: Bullet Points
      example:
        {
          transcript_ids: ["64nygnr62k-405c-4ae8-8a6b-d90b40ff3cce"],
          context: "This is an interview about wildfires.",
          answer_format: "Bullet Points",
          final_model: "default",
          temperature: 0,
          max_output_size: 3000,
        }

    LemurModel:
      x-fern-sdk-group-name: lemur
      type: string
      description: |
        The model that is used for the final prompt after compression is performed.
      enum:
        - default
        - basic
        - assemblyai/mistral-7b
        - anthropic/claude-2-1

    Error:
      type: object
      additionalProperties: false
      required: [error]
      properties:
        error:
          description: Error message
          type: string
        status:
          type: string
          const: error
      example:
        { error: "format_text must be a Boolean" }

  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    TooManyRequests:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    InternalServerError:
      description: An error occurred while processing the request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    ServiceUnavailable:
      description: Service Unavailable
    GatewayTimeout:
      description: Gateway Timeout

  securitySchemes:
    ApiKey:
      type: apiKey
      in: header
      name: Authorization
