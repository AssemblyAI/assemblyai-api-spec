{
  "info": {
    "name": "AssemblyAI API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": null
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.assemblyai.com",
      "type": "string"
    },
    {
      "key": "apiKey",
      "value": "",
      "type": "string"
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "value",
        "value": "{{apiKey}}",
        "type": "string"
      },
      {
        "key": "key",
        "value": "Authorization",
        "type": "string"
      },
      {
        "key": "in",
        "value": "header",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "_type": "container",
      "description": null,
      "name": "Files",
      "item": []
    },
    {
      "_type": "container",
      "description": null,
      "name": "Transcripts",
      "item": [
        {
          "_type": "endpoint",
          "name": "List transcripts",
          "request": {
            "description": "Retrieve a list of transcripts you created",
            "url": {
              "raw": "{{baseUrl}}/v2/transcript?limit=&status=&created_on=&before_id=&after_id=&throttled_only=",
              "host": ["{{baseUrl}}"],
              "path": ["v2", "transcript"],
              "query": [
                {
                  "key": "limit",
                  "value": "",
                  "description": "Maximum amount of transcripts to retrieve"
                },
                {
                  "key": "status",
                  "value": "",
                  "description": "Filter by transcript status"
                },
                {
                  "key": "created_on",
                  "value": "",
                  "description": "Only get transcripts created on this date"
                },
                {
                  "key": "before_id",
                  "value": "",
                  "description": "Get transcripts that were created before this transcript ID"
                },
                {
                  "key": "after_id",
                  "value": "",
                  "description": "Get transcripts that were created after this transcript ID"
                },
                {
                  "key": "throttled_only",
                  "value": "",
                  "description": "Only get throttled transcripts, overrides the status filter"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              }
            ],
            "method": "GET",
            "auth": null,
            "body": null
          },
          "response": []
        },
        {
          "_type": "endpoint",
          "name": "Create a transcript from an audio file",
          "request": {
            "description": "Create a transcript from an audio or video file that is accessible via a URL.",
            "url": {
              "raw": "{{baseUrl}}/v2/transcript",
              "host": ["{{baseUrl}}"],
              "path": ["v2", "transcript"],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"audio_url\": \"example\",\n    \"language_code\": \"en\",\n    \"punctuate\": true,\n    \"format_text\": true,\n    \"dual_channel\": true,\n    \"webhook_url\": \"example\",\n    \"webhook_auth_header_name\": \"example\",\n    \"webhook_auth_header_value\": \"example\",\n    \"auto_highlights\": true,\n    \"audio_start_from\": 0,\n    \"audio_end_at\": 0,\n    \"word_boost\": [\n        \"example\"\n    ],\n    \"boost_param\": \"low\",\n    \"filter_profanity\": true,\n    \"redact_pii\": true,\n    \"redact_pii_audio\": true,\n    \"redact_pii_audio_quality\": \"example\",\n    \"redact_pii_policies\": [\n        \"medical_process\"\n    ],\n    \"redact_pii_sub\": \"entity_type\",\n    \"speaker_labels\": true,\n    \"speakers_expected\": 0,\n    \"content_safety\": true,\n    \"iab_categories\": true,\n    \"language_detection\": true,\n    \"custom_spelling\": [\n        {\n            \"from\": [\n                \"example\"\n            ],\n            \"to\": \"example\"\n        }\n    ],\n    \"disfluencies\": true,\n    \"sentiment_analysis\": true,\n    \"auto_chapters\": true,\n    \"entity_detection\": true,\n    \"speech_threshold\": 0,\n    \"summarization\": true,\n    \"summary_model\": \"informative\",\n    \"summary_type\": \"bullets\",\n    \"custom_topics\": true,\n    \"topics\": [\n        \"example\"\n    ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": []
        },
        {
          "_type": "endpoint",
          "name": "Get the transcript",
          "request": {
            "description": "Get the transcript resource. The transcript is ready when the \"status\" is \"completed\".",
            "url": {
              "raw": "{{baseUrl}}/v2/transcript/:transcript_id",
              "host": ["{{baseUrl}}"],
              "path": ["v2", "transcript", ":transcript_id"],
              "query": [],
              "variable": [
                {
                  "key": "transcript_id",
                  "value": "",
                  "description": "ID of the transcript"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              }
            ],
            "method": "GET",
            "auth": null,
            "body": null
          },
          "response": []
        },
        {
          "_type": "endpoint",
          "name": "Delete the transcript",
          "request": {
            "description": "Delete the transcript",
            "url": {
              "raw": "{{baseUrl}}/v2/transcript/:transcript_id",
              "host": ["{{baseUrl}}"],
              "path": ["v2", "transcript", ":transcript_id"],
              "query": [],
              "variable": [
                {
                  "key": "transcript_id",
                  "value": "",
                  "description": "ID of the transcript"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              }
            ],
            "method": "DELETE",
            "auth": null,
            "body": null
          },
          "response": []
        },
        {
          "_type": "endpoint",
          "name": "Export transcript as SRT or VTT captions",
          "request": {
            "description": "Export your transcript in SRT or VTT format, to be plugged into a video player for subtitles and closed captions.",
            "url": {
              "raw": "{{baseUrl}}/v2/transcript/:transcript_id/:subtitle_format?chars_per_caption=",
              "host": ["{{baseUrl}}"],
              "path": [
                "v2",
                "transcript",
                ":transcript_id",
                ":subtitle_format"
              ],
              "query": [
                {
                  "key": "chars_per_caption",
                  "value": "",
                  "description": "The maximum number of characters per caption"
                }
              ],
              "variable": [
                {
                  "key": "transcript_id",
                  "value": "",
                  "description": "ID of the transcript"
                },
                {
                  "key": "subtitle_format",
                  "value": "",
                  "description": "The format of the captions"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              }
            ],
            "method": "GET",
            "auth": null,
            "body": null
          },
          "response": []
        },
        {
          "_type": "endpoint",
          "name": "Get the transcript split by sentences",
          "request": {
            "description": "Get the transcript split by sentences. The API will attempt to semantically segment the transcript into sentences to create more reader-friendly transcripts.",
            "url": {
              "raw": "{{baseUrl}}/v2/transcript/:transcript_id/sentences",
              "host": ["{{baseUrl}}"],
              "path": ["v2", "transcript", ":transcript_id", "sentences"],
              "query": [],
              "variable": [
                {
                  "key": "transcript_id",
                  "value": "",
                  "description": "ID of the transcript"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              }
            ],
            "method": "GET",
            "auth": null,
            "body": null
          },
          "response": []
        },
        {
          "_type": "endpoint",
          "name": "Get the transcript split by paragraphs",
          "request": {
            "description": "Get the transcript split by paragraphs. The API will attempt to semantically segment your transcript into paragraphs to create more reader-friendly transcripts.",
            "url": {
              "raw": "{{baseUrl}}/v2/transcript/:transcript_id/paragraphs",
              "host": ["{{baseUrl}}"],
              "path": ["v2", "transcript", ":transcript_id", "paragraphs"],
              "query": [],
              "variable": [
                {
                  "key": "transcript_id",
                  "value": "",
                  "description": "ID of the transcript"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              }
            ],
            "method": "GET",
            "auth": null,
            "body": null
          },
          "response": []
        },
        {
          "_type": "endpoint",
          "name": "Search the given transcript for words, numbers, or phrases",
          "request": {
            "description": "Search through the transcript for a specific set of keywords. You can search for individual words, numbers, or phrases containing up to five words or numbers.",
            "url": {
              "raw": "{{baseUrl}}/v2/transcript/:transcript_id/word-search?words=",
              "host": ["{{baseUrl}}"],
              "path": ["v2", "transcript", ":transcript_id", "word-search"],
              "query": [
                {
                  "key": "words",
                  "value": "",
                  "description": "Keywords to search for"
                }
              ],
              "variable": [
                {
                  "key": "transcript_id",
                  "value": "",
                  "description": "ID of the transcript"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              }
            ],
            "method": "GET",
            "auth": null,
            "body": null
          },
          "response": []
        },
        {
          "_type": "endpoint",
          "name": "Retrieve the redacted audio object containing the status and URL to the redacted audio.",
          "request": {
            "description": "Retrieve the redacted audio object containing the status and URL to the redacted audio.",
            "url": {
              "raw": "{{baseUrl}}/v2/transcript/:transcript_id/redacted-audio",
              "host": ["{{baseUrl}}"],
              "path": ["v2", "transcript", ":transcript_id", "redacted-audio"],
              "query": [],
              "variable": [
                {
                  "key": "transcript_id",
                  "value": "",
                  "description": "ID of the transcript"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              }
            ],
            "method": "GET",
            "auth": null,
            "body": null
          },
          "response": []
        }
      ]
    },
    {
      "_type": "container",
      "description": null,
      "name": "Realtime",
      "item": [
        {
          "_type": "endpoint",
          "name": "Create a temporary authentication token for real-time transcription",
          "request": {
            "description": "Create a temporary authentication token for real-time transcription",
            "url": {
              "raw": "{{baseUrl}}/v2/realtime/token",
              "host": ["{{baseUrl}}"],
              "path": ["v2", "realtime", "token"],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"expires_in\": 0\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "_type": "container",
      "description": null,
      "name": "Lemur",
      "item": [
        {
          "_type": "endpoint",
          "name": "Run a LLM task with your own prompt",
          "request": {
            "description": "Use the LeMUR task endpoint to input your own LLM prompt.",
            "url": {
              "raw": "{{baseUrl}}/lemur/v3/generate/task",
              "host": ["{{baseUrl}}"],
              "path": ["lemur", "v3", "generate", "task"],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"prompt\": \"example\",\n    \"transcript_ids\": [\n        \"example\"\n    ],\n    \"input_text\": \"example\",\n    \"context\": \"example\",\n    \"final_model\": \"default\",\n    \"max_output_size\": 0,\n    \"temperature\": 0\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": []
        },
        {
          "_type": "endpoint",
          "name": "Generate a custom summary from one or more transcripts",
          "request": {
            "description": "Custom Summary allows you to distill a piece of audio into a few impactful sentences. You can give the model context to obtain more targeted results while outputting the results in a variety of formats described in human language.",
            "url": {
              "raw": "{{baseUrl}}/lemur/v3/generate/summary",
              "host": ["{{baseUrl}}"],
              "path": ["lemur", "v3", "generate", "summary"],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"answer_format\": \"example\",\n    \"transcript_ids\": [\n        \"example\"\n    ],\n    \"input_text\": \"example\",\n    \"context\": \"example\",\n    \"final_model\": \"default\",\n    \"max_output_size\": 0,\n    \"temperature\": 0\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": []
        },
        {
          "_type": "endpoint",
          "name": "Create answers to one or more questions about one or more transcripts",
          "request": {
            "description": "Question & Answer allows you to ask free-form questions about a single transcript or a group of transcripts. The questions can be any whose answers you find useful, such as judging whether a caller is likely to become a customer or whether all items on a meeting's agenda were covered.",
            "url": {
              "raw": "{{baseUrl}}/lemur/v3/generate/question-answer",
              "host": ["{{baseUrl}}"],
              "path": ["lemur", "v3", "generate", "question-answer"],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"questions\": [\n        {\n            \"question\": \"example\",\n            \"context\": \"example\",\n            \"answer_format\": \"example\",\n            \"answer_options\": [\n                \"example\"\n            ]\n        }\n    ],\n    \"transcript_ids\": [\n        \"example\"\n    ],\n    \"input_text\": \"example\",\n    \"context\": \"example\",\n    \"final_model\": \"default\",\n    \"max_output_size\": 0,\n    \"temperature\": 0\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": []
        },
        {
          "_type": "endpoint",
          "name": "Extract action items from one or more meeting transcripts",
          "request": {
            "description": "Use LeMUR to generate a list of action items from a transcript",
            "url": {
              "raw": "{{baseUrl}}/lemur/v3/generate/action-items",
              "host": ["{{baseUrl}}"],
              "path": ["lemur", "v3", "generate", "action-items"],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"transcript_ids\": [\n        \"example\"\n    ],\n    \"input_text\": \"example\",\n    \"context\": \"example\",\n    \"final_model\": \"default\",\n    \"max_output_size\": 0,\n    \"temperature\": 0\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": []
        },
        {
          "_type": "endpoint",
          "name": "Delete the data for a previously submitted LeMUR request",
          "request": {
            "description": "Delete the data for a previously submitted LeMUR request.\nThe LLM response data, as well as any context provided in the original request will be removed.\n",
            "url": {
              "raw": "{{baseUrl}}/lemur/v3/:request_id",
              "host": ["{{baseUrl}}"],
              "path": ["lemur", "v3", ":request_id"],
              "query": [],
              "variable": [
                {
                  "key": "request_id",
                  "value": "",
                  "description": "The ID of the LeMUR request whose data you want to delete. This would be found in the response of the original request."
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              }
            ],
            "method": "DELETE",
            "auth": null,
            "body": null
          },
          "response": []
        }
      ]
    }
  ]
}
