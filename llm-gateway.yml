openapi: 3.1.0
info:
  title: AAI Chat Completions API
  description: API for generating text with various language models.
  version: 1.0.0
servers:
  - url: https://llm-gateway.assemblyai.com/v1
    description: Production Server

paths:
  /chat/completions:
    post:
      summary: Create a chat completion
      description: Generates a response from a model given a prompt or a series of messages.
      operationId: createChatCompletion
      requestBody:
        description: Request body for creating a chat completion.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LLMGatewayRequest"
            examples:
              messages_example:
                summary: Chat with messages
                value:
                  model: "claude-sonnet-4-5-20250929"
                  messages:
                    - role: "user"
                      content: "Hello, how are you?"
                  max_tokens: 100
                  temperature: 0.7
              prompt_example:
                summary: Simple prompt
                value:
                  model: "claude-sonnet-4-5-20250929"
                  prompt: "Write a haiku about coding"
                  max_tokens: 50
                  temperature: 0.5
      responses:
        "200":
          description: Successful response containing the model's choices.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        default:
          description: An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  schemas:
    # Request Schemas
    LLMGatewayRequest:
      type: object
      description: The main request body for the chat completions endpoint.
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"
          description: A list of messages comprising the conversation so far.
        prompt:
          type: string
          description: A simple string prompt. The API will automatically convert this into a user message.
        model:
          type: string
          description: The ID of the model to use for this request.
          examples: ["claude-sonnet-4-5-20250929"]
        max_tokens:
          type: integer
          minimum: 1
          description: The maximum number of tokens to generate in the completion.
        temperature:
          type: number
          format: float
          minimum: 0.0
          maximum: 2.0
          description: Controls randomness. Lower values produce more deterministic results.
        tools:
          type: array
          items:
            $ref: "#/components/schemas/Tool"
          description: A list of tools the model may call.
        tool_choice:
          $ref: "#/components/schemas/ToolChoice"
      required:
        - model

    Message:
      oneOf:
        - $ref: "#/components/schemas/UserAssistantSystemMessage"
        - $ref: "#/components/schemas/ToolMessage"
      discriminator:
        propertyName: role
        mapping:
          user: "#/components/schemas/UserAssistantSystemMessage"
          assistant: "#/components/schemas/UserAssistantSystemMessage"
          system: "#/components/schemas/UserAssistantSystemMessage"
          tool: "#/components/schemas/ToolMessage"

    UserAssistantSystemMessage:
      type: object
      properties:
        role:
          type: string
          enum: [user, assistant, system]
        content:
          oneOf:
            - type: string
            - type: array
              items:
                $ref: "#/components/schemas/ContentPart"
          description: The content of the message. Can be a string or an array of content parts (for user messages).
        name:
          type: string
          description: An optional name for the participant.
      required:
        - role
        - content

    ToolMessage:
      type: object
      properties:
        role:
          type: string
          enum: [tool]
        content:
          type: string
          description: The result of the tool call.
        tool_call_id:
          type: string
          description: The ID of the tool call that this message is responding to.
      required:
        - role
        - content
        - tool_call_id

    ContentPart:
      description: Currently only supports text content parts.
      $ref: "#/components/schemas/TextContent"

    TextContent:
      type: object
      properties:
        type:
          type: string
          enum: [text]
        text:
          type: string
      required:
        - type
        - text

    Tool:
      type: object
      properties:
        type:
          type: string
          enum: [function]
        function:
          $ref: "#/components/schemas/FunctionDescription"
      required:
        - type
        - function

    FunctionDescription:
      type: object
      properties:
        name:
          type: string
          description: The name of the function to be called.
        description:
          type: string
          description: A description of what the function does.
        parameters:
          type: object
          description: A JSON Schema object describing the parameters the function accepts.
          additionalProperties: true
      required:
        - name
        - parameters

    ToolChoice:
      oneOf:
        - type: string
          enum: [none, auto]
        - type: object
          properties:
            type:
              type: string
              enum: [function]
            function:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
          required:
            - type
            - function
      description: Controls which (if any) function is called by the model.

    # Response Schemas
    Response:
      type: object
      properties:
        request_id:
          type: string
          format: uuid
        choices:
          type: array
          items:
            $ref: "#/components/schemas/Choice"
        request:
          type: object
          description: A copy of the original request, excluding `prompt` and `messages`.
          properties:
            model:
              type: string
            max_tokens:
              type: integer
            temperature:
              type: number
            tools:
              type: array
              items:
                $ref: "#/components/schemas/Tool"
            tool_choice:
              $ref: "#/components/schemas/ToolChoice"
        usage:
          $ref: "#/components/schemas/Usage"

    Choice:
      type: object
      properties:
        message:
          $ref: "#/components/schemas/ResponseMessage"
        finish_reason:
          type: string
          description: The reason the model stopped generating tokens.
          examples: ["stop"]
        tool_calls:
          type: array
          items:
            $ref: "#/components/schemas/FunctionToolCall"

    ResponseMessage:
      type: object
      properties:
        role:
          type: string
        content:
          type: string

    FunctionToolCall:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum: [function]
        function:
          $ref: "#/components/schemas/FunctionCall"
      required:
        - id
        - type
        - function

    FunctionCall:
      type: object
      properties:
        name:
          type: string
        arguments:
          type: string
          description: The arguments to call the function with, as a JSON-formatted string.
      required:
        - name
        - arguments

    Usage:
      type: object
      properties:
        prompt_tokens:
          type: integer
        completion_tokens:
          type: integer
        total_tokens:
          type: integer
      required:
        - prompt_tokens
        - completion_tokens
        - total_tokens

    # Error Schema
    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: integer
              format: int32
            message:
              type: string
            metadata:
              type: object
              additionalProperties: true
          required:
            - code
            - message
