imports:
  root: __package__.yml
types:
  AudioData:
    docs: Binary audio data
    type: string
    validation:
      format: binary
  AudioEncoding:
    default: pcm_s16le
    docs: The encoding of the audio data
    enum:
      - casing:
          camel: pcmS16le
          pascal: PcmS16le
          screaming-snake: PCM_S16LE
          snake: pcm_s16le
        docs: PCM signed 16-bit little-endian
        value: pcm_s16le
      - casing:
          camel: pcmMulaw
          pascal: PcmMulaw
          screaming-snake: PCM_MULAW
          snake: pcm_mulaw
        docs: PCM Mu-law
        value: pcm_mulaw
    source:
      openapi: ../asyncapi.yml
  ConfigureEndUtteranceSilenceThreshold:
    docs: >-
      Configure the threshold for how long to wait before ending an utterance.
      Default is 700ms.
    properties:
      end_utterance_silence_threshold:
        docs: The duration threshold in milliseconds
        type: integer
        validation:
          max: 20000
          min: 0
    source:
      openapi: ../asyncapi.yml
  FinalTranscript:
    extends:
      - RealtimeBaseTranscript
    properties:
      message_type:
        docs: Describes the type of message
        type: literal<"FinalTranscript">
      punctuated:
        docs: Whether the text is punctuated and cased
        type: boolean
      text_formatted:
        docs: Whether the text is formatted, for example Dollar -> $
        type: boolean
    source:
      openapi: ../asyncapi.yml
  ForceEndUtterance:
    docs: Manually end an utterance
    properties:
      force_end_utterance:
        docs: >-
          A boolean value to communicate that you wish to force the end of the
          utterance
        type: boolean
    source:
      openapi: ../asyncapi.yml
  MessageType:
    enum:
      - SessionBegins
      - PartialTranscript
      - FinalTranscript
      - SessionInformation
      - SessionTerminated
    source:
      openapi: ../asyncapi.yml
  PartialTranscript:
    extends:
      - RealtimeBaseTranscript
    properties:
      message_type:
        docs: Describes the type of message
        type: literal<"PartialTranscript">
    source:
      openapi: ../asyncapi.yml
  RealtimeBaseMessage:
    properties:
      message_type:
        docs: Describes the type of the message
        type: MessageType
    source:
      openapi: ../asyncapi.yml
  RealtimeBaseTranscript:
    properties:
      audio_end:
        docs: End time of audio sample relative to session start, in milliseconds
        type: integer
      audio_start:
        docs: Start time of audio sample relative to session start, in milliseconds
        type: integer
      confidence:
        docs: The confidence score of the entire transcription, between 0 and 1
        type: double
        validation:
          max: 1
          min: 0
      created:
        docs: The timestamp for the partial transcript
        type: datetime
      text:
        docs: The partial transcript for your audio
        type: string
      words:
        docs: >
          An array of objects, with the information for each word in the
          transcription text.

          Includes the start and end time of the word in milliseconds, the
          confidence score of the word, and the text, which is the word itself.
        type: list<Word>
    source:
      openapi: ../asyncapi.yml
  RealtimeEncoding:
    default: pcm_s16le
    docs: The encoding of the audio data
    enum:
      - casing:
          camel: pcmS16le
          pascal: PcmS16le
          screaming-snake: PCM_S16LE
          snake: pcm_s16le
        docs: PCM signed 16-bit little-endian
        value: pcm_s16le
      - casing:
          camel: pcmMulaw
          pascal: PcmMulaw
          screaming-snake: PCM_MULAW
          snake: pcm_mulaw
        docs: PCM Mu-law
        value: pcm_mulaw
    source:
      openapi: ../asyncapi.yml
  RealtimeError:
    properties:
      error: string
    source:
      openapi: ../asyncapi.yml
  RealtimeMessage:
    discriminated: false
    source:
      openapi: ../asyncapi.yml
    union:
      - SessionBegins
      - PartialTranscript
      - FinalTranscript
      - SessionInformation
      - SessionTerminated
      - RealtimeError
  RealtimeTemporaryTokenResponse:
    properties:
      token:
        docs: The temporary authentication token for Streaming Speech-to-Text
        type: string
    source:
      openapi: ../openapi.yml
  RealtimeTranscript:
    discriminated: false
    source:
      openapi: ../asyncapi.yml
    union:
      - PartialTranscript
      - FinalTranscript
  RealtimeTranscriptType:
    enum:
      - PartialTranscript
      - FinalTranscript
    source:
      openapi: ../asyncapi.yml
  receiveMessage:
    discriminated: false
    docs: Receive messages from the WebSocket
    source:
      openapi: ../asyncapi.yml
    union:
      - SessionBegins
      - PartialTranscript
      - FinalTranscript
      - SessionInformation
      - SessionTerminated
      - RealtimeError
  sendMessage:
    discriminated: false
    docs: Send messages to the WebSocket
    source:
      openapi: ../asyncapi.yml
    union:
      - AudioData
      - TerminateSession
      - ForceEndUtterance
      - ConfigureEndUtteranceSilenceThreshold
  SessionBegins:
    properties:
      expires_at:
        docs: Timestamp when this session will expire
        type: datetime
      message_type:
        docs: Describes the type of the message
        type: literal<"SessionBegins">
      session_id:
        docs: Unique identifier for the established session
        type: string
        validation:
          format: uuid
    source:
      openapi: ../asyncapi.yml
  SessionInformation:
    docs: >
      Information about the session that is concluding.

      This message is sent at the end of the session, before the
      SessionTerminated message.
    properties:
      audio_duration_seconds:
        docs: The total duration of the audio in seconds
        type: float
      message_type:
        docs: Describes the type of the message
        type: literal<"SessionInformation">
    source:
      openapi: ../asyncapi.yml
  SessionTerminated:
    properties:
      message_type:
        docs: Describes the type of the message
        type: literal<"SessionTerminated">
    source:
      openapi: ../asyncapi.yml
  TerminateSession:
    properties:
      terminate_session:
        docs: Set to true to end your streaming session forever
        type: boolean
    source:
      openapi: ../asyncapi.yml
  Word:
    properties:
      confidence:
        docs: Confidence score of the word
        type: double
        validation:
          max: 1
          min: 0
      end:
        docs: End time of the word in milliseconds
        type: integer
      start:
        docs: Start time of the word in milliseconds
        type: integer
      text:
        docs: The word itself
        type: string
    source:
      openapi: ../asyncapi.yml
channel:
  auth: false
  display-name: Streaming Speech-to-Text
  examples:
    - messages:
        - body: UklGRtjIAABXQVZFZ
          type: publish
        - body:
            audio_end: 1500
            audio_start: 0
            confidence: 0.987190506414702
            created: "2023-05-24T12:09:10Z"
            message_type: PartialTranscript
            text: there is a house in new orleans
            words:
              - confidence: 1
                end: 300
                start: 0
                text: there
          type: subscribe
        - body:
            audio_end: 1500
            audio_start: 0
            confidence: 0.987190506414702
            created: "2023-05-24T12:09:10Z"
            message_type: FinalTranscript
            punctuated: true
            text: There is a house in New Orleans.
            text_formatted: true
            words:
              - confidence: 1
                end: 300
                start: 0
                text: there
          type: subscribe
        - body:
            terminate_session: true
          type: publish
        - body:
            message_type: SessionTerminated
          type: subscribe
      query-parameters:
        sample_rate: 16000
        token: eyJhbGciOiJIUzI1...
        word_boost: '["foo","bar"]'
  headers:
    Authorization:
      docs: Authenticate using your AssemblyAI API key
      name: authorization
      type: optional<string>
  messages:
    publish:
      body:
        docs: Send messages to the WebSocket
        type: sendMessage
      origin: client
    subscribe:
      body:
        docs: Receive messages from the WebSocket
        type: receiveMessage
      origin: server
  path: /v2/realtime/ws
  query-parameters:
    disable_partial_transcripts:
      default: false
      docs: Set to true to not receive partial transcripts. Defaults to false.
      type: optional<boolean>
    enable_extra_session_information:
      default: false
      docs: >-
        Set to true to receive the SessionInformation message before the session
        ends. Defaults to false.
      type: optional<boolean>
    encoding:
      default: pcm_s16le
      docs: The encoding of the audio data
      type: optional<RealtimeEncoding>
    sample_rate:
      docs: The sample rate of the streamed audio
      type: integer
    token:
      docs: >
        Authenticate using a [generated temporary
        token](https://www.assemblyai.com/docs/speech-to-text/streaming#authenticate-with-a-temporary-token)
      type: optional<string>
      validation:
        format: password
    word_boost:
      docs: >
        Add up to 2500 characters of custom vocabulary.

        The parameter value must be a JSON encoded array of strings. The JSON
        must be URL encoded like other query string parameters.
      type: optional<string>
  url: API
service:
  auth: false
  base-path: ""
  endpoints:
    createTemporaryToken:
      auth: true
      display-name: Create temporary authentication token for Streaming STT
      docs: >
        <Warning>Streaming Speech-to-Text is currently not available on the EU
        endpoint.</Warning>

        <Note>Any usage associated with a temporary token will be attributed to
        the API key that generated it.</Note>

        Create a temporary authentication token for Streaming Speech-to-Text
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.NotFoundError
        - root.TooManyRequestsError
        - root.InternalServerError
        - root.ServiceUnavailableError
        - root.GatewayTimeoutError
      examples:
        - request:
            expires_in: 480
          response:
            body:
              token: fe4145dd1e7a2e149488dcd2d553a8018a89833fc5084837d66fd1bcf5a105d4
      method: POST
      path: /v2/realtime/token
      request:
        body:
          properties:
            expires_in:
              docs: The amount of time until the token expires in seconds
              type: integer
              validation:
                min: 60
        content-type: application/json
        name: CreateRealtimeTemporaryTokenParams
      response:
        docs: Temporary authentication token generated
        status-code: 200
        type: RealtimeTemporaryTokenResponse
      source:
        openapi: ../openapi.yml
  source:
    openapi: ../openapi.yml
