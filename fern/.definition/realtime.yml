imports:
  root: __package__.yml
service:
  auth: false
  base-path: ""
  endpoints:
    createTemporaryToken:
      path: /v2/realtime/token
      method: POST
      auth: true
      docs: Create a temporary authentication token for Streaming Speech-to-Text
      display-name: Create temporary authentication token for Streaming STT
      request:
        name: CreateRealtimeTemporaryTokenParams
        body:
          properties:
            expires_in:
              type: integer
              docs: The amount of time until the token expires in seconds
              validation:
                min: 60
      response:
        docs: Temporary authentication token generated
        type: RealtimeTemporaryTokenResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.NotFoundError
        - root.TooManyRequestsError
        - root.InternalServerError
        - root.ServiceUnavailableError
        - root.GatewayTimeoutError
      examples:
        - request:
            expires_in: 480
          response:
            body:
              token: fe4145dd1e7a2e149488dcd2d553a8018a89833fc5084837d66fd1bcf5a105d4
types:
  RealtimeBaseMessage:
    properties:
      message_type:
        type: MessageType
        docs: Describes the type of the message
  RealtimeMessage:
    discriminated: false
    union:
      - SessionBegins
      - PartialTranscript
      - FinalTranscript
      - SessionInformation
      - SessionTerminated
      - RealtimeError
  RealtimeError:
    properties:
      error: string
  MessageType:
    enum:
      - SessionBegins
      - PartialTranscript
      - FinalTranscript
      - SessionInformation
      - SessionTerminated
  RealtimeTranscriptType:
    enum:
      - PartialTranscript
      - FinalTranscript
  RealtimeTranscript:
    discriminated: false
    union:
      - PartialTranscript
      - FinalTranscript
  SessionBegins:
    properties:
      message_type:
        type: literal<"SessionBegins">
        docs: Describes the type of the message
      session_id:
        type: string
        docs: Unique identifier for the established session
        validation:
          format: uuid
      expires_at:
        type: datetime
        docs: Timestamp when this session will expire
  SessionInformation:
    docs: >
      Information about the session that is concluding.

      This message is sent at the end of the session, before the
      SessionTerminated message.
    properties:
      message_type:
        type: literal<"SessionInformation">
        docs: Describes the type of the message
      audio_duration_seconds:
        type: double
        docs: The total duration of the audio in seconds
  SessionTerminated:
    properties:
      message_type:
        type: literal<"SessionTerminated">
        docs: Describes the type of the message
  RealtimeBaseTranscript:
    properties:
      audio_start:
        type: integer
        docs: Start time of audio sample relative to session start, in milliseconds
      audio_end:
        type: integer
        docs: End time of audio sample relative to session start, in milliseconds
      confidence:
        type: double
        docs: The confidence score of the entire transcription, between 0 and 1
        validation:
          min: 0
          max: 1
      text:
        type: string
        docs: The partial transcript for your audio
      words:
        docs: >
          An array of objects, with the information for each word in the
          transcription text.

          Includes the start and end time of the word in milliseconds, the
          confidence score of the word, and the text, which is the word itself.
        type: list<Word>
      created:
        type: datetime
        docs: The timestamp for the partial transcript
  PartialTranscript:
    properties:
      message_type:
        type: literal<"PartialTranscript">
        docs: Describes the type of message
    extends:
      - RealtimeBaseTranscript
  FinalTranscript:
    properties:
      message_type:
        type: literal<"FinalTranscript">
        docs: Describes the type of message
      punctuated:
        type: boolean
        docs: Whether the text is punctuated and cased
      text_formatted:
        type: boolean
        docs: Whether the text is formatted, for example Dollar -> $
    extends:
      - RealtimeBaseTranscript
  Word:
    properties:
      start:
        type: integer
        docs: Start time of the word in milliseconds
      end:
        type: integer
        docs: End time of the word in milliseconds
      confidence:
        type: double
        docs: Confidence score of the word
        validation:
          min: 0
          max: 1
      text:
        type: string
        docs: The word itself
  AudioData:
    type: string
    docs: Binary audio data
    validation:
      format: binary
  ForceEndUtterance:
    docs: Manually end an utterance
    properties:
      force_end_utterance:
        type: boolean
        docs: >-
          A boolean value to communicate that you wish to force the end of the
          utterance
  ConfigureEndUtteranceSilenceThreshold:
    docs: >-
      Configure the threshold for how long to wait before ending an utterance.
      Default is 700ms.
    properties:
      end_utterance_silence_threshold:
        type: integer
        docs: The duration threshold in milliseconds
        validation:
          min: 0
          max: 20000
  TerminateSession:
    properties:
      terminate_session:
        type: boolean
        docs: Set to true to end your streaming session forever
  AudioEncoding:
    enum:
      - value: pcm_s16le
        docs: PCM signed 16-bit little-endian
        casing:
          camel: pcmS16le
          screaming-snake: PCM_S16LE
          snake: pcm_s16le
          pascal: PcmS16le
      - value: pcm_mulaw
        docs: PCM Mu-law
        casing:
          camel: pcmMulaw
          screaming-snake: PCM_MULAW
          snake: pcm_mulaw
          pascal: PcmMulaw
    docs: The encoding of the audio data
  RealtimeTemporaryTokenResponse:
    properties:
      token:
        type: string
        docs: The temporary authentication token for Streaming Speech-to-Text
