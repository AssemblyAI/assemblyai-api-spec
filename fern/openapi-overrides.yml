components:
  schemas:
    LemurBaseParams:
      properties:
        final_model:
          $ref: "#/components/schemas/LemurModel"

paths:
  /v2/transcript:
    get:
      x-fern-examples:
        - code-samples:
            - language: python
              code: >-
                import requests

                headers = {
                    "Authorization": "Bearer " + os.environ.get("ASSEMBLYAI_API_KEY")
                }

                response = requests.get(
                    "https://api.assemblyai.com/v2/transcript",
                    headers=headers,
                    params={"limit": 10, "status": "completed"},
                )
            - language: typescript
              code: >-
                const axios = require("axios");

                const headers = {
                    Authorization: `Bearer ${process.env.ASSEMBLYAI_API_KEY}`,
                };

                const response = await axios.get(
                    "https://api.assemblyai.com/v2/transcript",
                    {
                        headers,
                        params: { limit: 10, status: "completed" },
                    }
                );
            - language: php
              code: |-
                $ch = curl_init();

                curl_setopt($ch, CURLOPT_URL, "https://api.assemblyai.com/v2/transcript?limit=10&status=completed");

                curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
                curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "GET");
                curl_setopt($ch, CURLOPT_HTTPHEADER, array("Authorization: Bearer " . getenv("ASSEMBLYAI_API_KEY")));
                $response = curl_exec($ch);
                
                curl_close($ch);